<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:ESRI.ArcLogistics.App.Converters"
                    xmlns:controls="clr-namespace:ESRI.ArcLogistics.App.Controls"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
                    xmlns:systemControls="clr-namespace:System.Windows.Controls.Primitives;assembly=PresentationFramework"
                    xmlns:toolkit="http://schemas.microsoft.com/wpf/2008/toolkit"
                    xmlns:esri="clr-namespace:ESRI.ArcGIS.Client;assembly=ESRI.ArcGIS.Client"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- Background Style -->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <Style x:Key="BakgroundStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid Background = "{StaticResource BackgroundBaseColor}" 
                          VerticalAlignment="Stretch" 
                          HorizontalAlignment="Stretch">
                        <Grid Background = "{StaticResource BackgroundBaseGradient}"
                              VerticalAlignment="Stretch" 
                              HorizontalAlignment="Stretch"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- Button Styles -->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <!-- Close/Delete button style -->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundFill}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="#00484848" BorderThickness="1,1,1,1" x:Name="border">
                        <Grid Width="10" Height="10">
                            <Path Fill="{x:Null}" Stretch="Fill" Stroke="#FF484848" Margin="1,1,1,1" Data="M0.50000001,0.50000001 L7.4999998,7.4999998 M7.5,0.50000005 L0.50000025,7.4999999" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeDashCap="Round" StrokeLineJoin="Round" StrokeThickness="2" Width="8" Height="8"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF484848"/>
                            <Setter Property="Background" TargetName="border" Value="#00000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Categories (tabs) button style -->

    <Style x:Key="CategoriesToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="0,0,1,0"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundFill}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent" x:Name="grid" SnapsToDevicePixels="True" Margin="0,0,5,0">
                        <Grid.BitmapEffect>
                            <DropShadowBitmapEffect Softness="0.2" ShadowDepth="3" Color="#FF313131"/>
                        </Grid.BitmapEffect>
                        <Border BorderBrush="{StaticResource CategoryButtonBorder}" BorderThickness="1,1,1,1" CornerRadius="10,10,0,0" x:Name="border_Copy" RenderTransformOrigin="0.5,1" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource CategoryButtonBackground}" SnapsToDevicePixels="True">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                        <ContentPresenter Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border_Copy" Value="{StaticResource CommonMouseOverBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border_Copy" Value="{StaticResource CommonMouseOverBorder}"/>
                            <Setter Property="BorderThickness" TargetName="border_Copy" Value="1,1,1,0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border_Copy" Value="{StaticResource CategoryButtonCheckedBackground}"/>
                            <Setter Property="RenderTransform" TargetName="border_Copy">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1.2"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransformOrigin" TargetName="border_Copy" Value="0.5,0.5"/>
                            <Setter Property="Margin" TargetName="grid" Value="0,0,5,0"/>
                            <Setter Property="BorderThickness" TargetName="border_Copy" Value="1,1,1,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <!-- Task widget header button style -->


    <Style x:Key="TasksHeaderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource AquamarineSkinLightBlueColor}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="showBorder">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border_Copy" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="hideBorder">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border_Copy" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Border BorderThickness="1,1,1,1" 
                            CornerRadius="5,5,5,5" 
                            x:Name="border" 
                            BorderBrush="{StaticResource AquamarineSkinExpanderControlBorderBrush}" 
                            Background="White"
                            Width="Auto" 
                            Height="Auto">
                        <Grid VerticalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border BorderThickness="1,1,1,0" CornerRadius="5,5,0,0" 
                                    Grid.ColumnSpan="2"
                                    x:Name="border_Copy" 
                                    BorderBrush="{StaticResource AquamarineSkinExpanderControlBorderBrush}" 
                                    Background="{Binding Path=Background, ElementName=border, Mode=Default}" 
                                    Margin="-1,-1,-1,-1" 
                                    Grid.RowSpan="2" 
                                    Padding="0,0,0,0" 
                                    Visibility="Hidden">
                                <Border x:Name="border1" 
                                        Width="Auto" 
                                        Height="1" 
                                        BorderBrush="{Binding Path=BorderBrush, ElementName=border_Copy, Mode=Default}" 
                                        BorderThickness="0,1,0,0" 
                                        VerticalAlignment="Bottom" 
                                        Margin="8,0,8,0"/>
                            </Border>
                            <ContentPresenter 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    RecognizesAccessKey="True" 
                                    Margin="8,0,20,0" 
                                    VerticalAlignment="Center" 
                                    Grid.Column="0"
                                    d:LayoutOverrides="Height"/>
                            <Grid Margin="0,0,8,0" 
                                      HorizontalAlignment="Right" 
                                      Width="16" 
                                      VerticalAlignment="Center" 
                                      Height="10" 
                                      RenderTransformOrigin="0.5,0.5" 
                                      Grid.Column="1"
                                      x:Name="grid1">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Path Fill="{x:Null}" Stretch="Fill" Stroke="{StaticResource AquamarineSkinExpanderControlBorderBrush}" Margin="3,0.192,3,4.808" VerticalAlignment="Stretch" Data="M7.4994011,7.8760007 L11.415367,11.250918 15.49865,7.959334" StrokeThickness="1" Width="10" Height="5"/>
                                <Path Fill="{x:Null}" Stretch="Fill" Stroke="{StaticResource AquamarineSkinExpanderControlBorderBrush}" Margin="3,0,3,0.501" Data="M7.4994011,7.8760007 L11.415367,11.250918 15.49865,7.959334" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" StrokeThickness="1" Width="10" Height="5"/>
                            </Grid>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked" Value="False">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource showBorder}"/>
                            </Trigger.ExitActions>

                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource hideBorder}"/>
                            </Trigger.EnterActions>
                            <Setter Property="Visibility" TargetName="border_Copy" Value="Visible"/>
                            <Setter Property="RenderTransform" TargetName="grid1">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="Tahoma"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="ExpandedControlBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource AquamarineSkinExpanderControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1,0,1,1"/>
        <Setter Property="CornerRadius" Value="0,0,5,5"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="White"/>
    </Style>


    <!-- Command buttons in command button group style -->
    <Style x:Key="CommandButtonInGroupStyle" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Margin" Value="0,0,2,2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseDown">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="pressed_border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseUp">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="pressed_border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Width="Auto" Height="Auto">
                        <Border MinWidth="60" 
                                BorderThickness="1,1,1,1" 
                                BorderBrush="{StaticResource ButtonBorderColor}" 
                                CornerRadius="6" 
                                x:Name="border" 
                                MinHeight = "25" 
                                Background="{StaticResource AquamarineSkinButtonBackground}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              RecognizesAccessKey="True" 
                                              Margin="2,0,2,0" 
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" 
                                              Content="{TemplateBinding Content}"/>
                        </Border>
                        <Border MinWidth="60" 
                                BorderThickness="1,1,1,1" 
                                BorderBrush="{StaticResource ButtonBorderColor}" 
                                CornerRadius="6" 
                                x:Name="pressed_border" 
                                MinHeight = "25"  
                                Background="{StaticResource ButtonPressedBrush}" 
                                Visibility="Collapsed">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              RecognizesAccessKey="True" 
                                              Margin="2,0,2,0" 
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" 
                                              Content="{TemplateBinding Content}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DisabledButtonBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource CommonMouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MouseUp}" x:Name="MouseUp_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MouseDown}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Focusable" Value="False"/>

    </Style>

    <!-- Command options buttons in command button group style -->
    <Style x:Key="CommandOptionsButtonInGroupStyle" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseDown">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="pressed_border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseUp">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="pressed_border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Width="Auto" Height="Auto" MinWidth="90" Margin="0,0,2,2">
                        <Border BorderThickness="1,1,1,1" 
                                BorderBrush="{StaticResource ButtonBorderColor}" 
                                CornerRadius="6" 
                                x:Name="border" 
                                MinHeight = "25"
                                xcdg:TableView.VerticalGridLineBrush="#FF000000" 
                                Background="{StaticResource AquamarineSkinButtonBackground}">
                            <Grid Width="Auto" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                  Margin="2,0,2,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.819*"/>
                                    <ColumnDefinition Width="10"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="2,0,2,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{TemplateBinding Content}" d:LayoutOverrides="Width, Height" Grid.ColumnSpan="1"/>
                                <Path Fill="{TemplateBinding Foreground}" Stretch="Fill" Stroke="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" Margin="1,4,1,2" Data="M22.529175,6.6265969 L25.936893,9.2342802 29.448045,6.6310544 z" Grid.Column="1" d:LayoutOverrides="GridBox" Height="5" Width="7"/>
                            </Grid>
                        </Border>
                        <Border 
                                BorderThickness="1,1,1,1" 
                                BorderBrush="{StaticResource ButtonBorderColor}" 
                                CornerRadius="6" 
                                x:Name="pressed_border" 
                                MinHeight = "25" 
                                xcdg:TableView.VerticalGridLineBrush="#FF000000" 
                                Background="{StaticResource ButtonPressedBrush}" 
                                Visibility="Collapsed">
                            <Grid Width="Auto" Height="Auto" Margin="0,0,2,0" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.819*"/>
                                    <ColumnDefinition Width="10"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="2,0,2,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{TemplateBinding Content}" d:LayoutOverrides="Width, Height" Grid.ColumnSpan="1"/>
                                <Path Fill="{TemplateBinding Foreground}" Stretch="Fill" Stroke="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" Margin="1,4,1,2" Data="M22.529175,6.6265969 L25.936893,9.2342802 29.448045,6.6310544 z" Grid.Column="1" d:LayoutOverrides="GridBox" Height="5" Width="7"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DisabledButtonBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource CommonMouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MouseUp}" x:Name="MouseUp_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MouseDown}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <!-- Command options button in widget style -->
    <Style x:Key="CommandOptionsButtonInWidgetStyle" TargetType="{x:Type Button}">
        <Style.Resources>
            <Storyboard x:Key="OnClick1"/>
        </Style.Resources>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundFill}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource AquamarineSkinWidgetForeground}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter1">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#00FFFFFF"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FFFFFFFF"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseEnter_Copy1">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFFFFFFF"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#00FFFFFF"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border MinHeight="25" x:Name="border" Background="#006280B6" HorizontalAlignment="Left" Cursor="Hand">
                        <Grid VerticalAlignment="Center" Margin="2,2,0,2">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="5" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Row="0" 
                                              x:Name="contentPresenter"
                                                  Grid.Column="0" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  RecognizesAccessKey="True" 
                                                  VerticalAlignment="Bottom" Margin="0,0,6,0"/>
                            <Rectangle Fill="#00FFFFFF" 
                                           Stroke="{x:Null}" 
                                           HorizontalAlignment="Stretch" 
                                           Margin="0,0,6,0" 
                                           Grid.Row="1" 
                                           Grid.ColumnSpan="1"
                                           Height="1" 
                                           VerticalAlignment="Top" 
                                           x:Name="rectangle"/>

                            <Path Grid.RowSpan="2" 
                                  Grid.Column="1" 
                                  Fill="{TemplateBinding Foreground}" 
                                  Stretch="Fill" 
                                  Stroke="{TemplateBinding Foreground}" 
                                  Data="M41.937667,12.325833 L37.155004,6.7369072 46.36296,6.7634792 z" 
                                  Height="5" 
                                  Width="10" 
                                  VerticalAlignment="Center" 
                                  HorizontalAlignment="Stretch" 
                                  Margin="2,0,4,4" StrokeLineJoin="Bevel" StrokeThickness="0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="rectangle" Value="0"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.6"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource OnMouseEnter_Copy1}" x:Name="OnMouseEnter_Copy1_BeginStoryboard"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="16,2,0,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <!-- Default style for command button in tasks. -->
    <Style x:Key="DefaultCommandButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border MinHeight="25" IsEnabled="False" x:Name="border" Background="#006280B6" HorizontalAlignment="Left" Cursor="Hand">
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Center" Margin="16,0,16,0">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="5" />
                            </Grid.RowDefinitions>
                            <TextBlock Text="{TemplateBinding Content}" 
                                       Foreground="{StaticResource AquamarineSkinLightBlueColor}"
                                       x:Name="contentPresenter"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,2,0,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>

    <!-- Command button in task widget style -->
    <Style x:Key="CommandButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CommandButtonInGroupStyle}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="0,2,0,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>

    <Style x:Key="DisabledExecutableCommandButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CommandButtonInGroupStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="Auto" Height="Auto">
                        <Border MinWidth="60" 
                                BorderThickness="1,1,1,1" 
                                BorderBrush="{StaticResource ButtonBorderColor}" 
                                CornerRadius="6" 
                                x:Name="border" 
                                MinHeight = "25" 
                                Background="{StaticResource DisabledButtonBackground}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              RecognizesAccessKey="True" 
                                              Margin="2,0,2,0" 
                                              IsEnabled="False"
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" 
                                              Content="{TemplateBinding Content}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DisabledCommandButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CommandButtonStyle}">
        <Setter Property="IsEnabled" Value="False"/>
    </Style>

    <!-- Command button in status bar style -->
    <Style x:Key="StatusBarButtonStyle" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseDown">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="pressed_border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseUp">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="pressed_border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Width="Auto" Height="Auto">
                        <Border MinWidth="50" BorderThickness="1,1,1,1" BorderBrush="{StaticResource BlackForegroundBrush}" CornerRadius="6,6,6,6" x:Name="border" MinHeight = "25" xcdg:TableView.VerticalGridLineBrush="#FF000000" Background="{StaticResource DarkApplicationBackgroundBrush}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="2,0,2,0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                        </Border>
                        <Border MinWidth="50" BorderThickness="1,1,1,1" BorderBrush="{StaticResource BlackForegroundBrush}" CornerRadius="6,6,6,6" x:Name="pressed_border" MinHeight = "25" xcdg:TableView.VerticalGridLineBrush="#FF000000" Visibility="Collapsed" Background="{StaticResource StatusBarButtonPressedBackground}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="2,0,2,0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource StatusBarButtonMouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MouseUp}" x:Name="MouseUp_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MouseDown}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Margin" Value="4,0,0,0"/>
    </Style>


    <!-- Messages button style -->

    <Style x:Key="MessagesButtonStyle" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Margin" Value="0,0,4,2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseDown">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="pressed_border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseUp">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="pressed_border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Width="Auto" Height="Auto">
                        <Border MinWidth="50" 
                                BorderThickness="1,1,1,1" 
                                BorderBrush="{StaticResource ButtonBorderColor}" 
                                CornerRadius="6,6,6,6" 
                                x:Name="border" 
                                MinHeight = "25" 
                                xcdg:TableView.VerticalGridLineBrush="#FF000000" 
                                Background="{StaticResource AquamarineSkinButtonBackground}">
                            <StackPanel Width="Auto" Height="Auto" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10,0,0,0">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                        			RecognizesAccessKey="True" 
                        			Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
                                <Grid Width="20" Margin="3,0,0,0" Height="8" RenderTransformOrigin="0.5,0.5" x:Name="grid" VerticalAlignment="Center">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Path Fill="{x:Null}" Stretch="Fill" Stroke="{TemplateBinding Foreground}" StrokeDashCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeThickness="1" Margin="5,0,5,0" VerticalAlignment="Top" Height="5" Grid.ColumnSpan="2" Grid.Row="1" Data="M3.5562954,2.2553134 L9.5568044,8.686501 15.369341,2.1923018"/>
                                    <Path Fill="{x:Null}" Stretch="Fill" Stroke="{TemplateBinding Foreground}" Margin="5,0,5,0" VerticalAlignment="Bottom" Data="M3.5562954,2.2553134 L9.5568044,8.686501 15.369341,2.1923018" StrokeDashCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeThickness="1" Height="5" Grid.ColumnSpan="2" Grid.Row="1"/>
                                </Grid>
                            </StackPanel>
                        </Border>
                        <Border MinWidth="50" 
                                BorderThickness="1,1,1,1" 
                                BorderBrush="{StaticResource ButtonBorderColor}" 
                                CornerRadius="6,6,6,6" 
                                x:Name="pressed_border" 
                                MinHeight = "25" 
                                xcdg:TableView.VerticalGridLineBrush="#FF000000" 
                                Background="{StaticResource ButtonPressedBrush}" 
                                Visibility="Collapsed">
                            <StackPanel Width="Auto" Height="Auto" Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="10,0,0,0">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                        			RecognizesAccessKey="True" 
                        			Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
                                <Grid Width="20" Margin="3,0,0,0" Height="8" RenderTransformOrigin="0.5,0.5" x:Name="grid1" VerticalAlignment="Center">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Path Fill="{x:Null}" Stretch="Fill" Stroke="{TemplateBinding Foreground}" StrokeDashCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeThickness="1" Margin="5,0,5,0" VerticalAlignment="Top" Height="5" Grid.ColumnSpan="2" Grid.Row="1" Data="M3.5562954,2.2553134 L9.5568044,8.686501 15.369341,2.1923018"/>
                                    <Path Fill="{x:Null}" Stretch="Fill" Stroke="{TemplateBinding Foreground}" Margin="5,0,5,0" VerticalAlignment="Bottom" Data="M3.5562954,2.2553134 L9.5568044,8.686501 15.369341,2.1923018" StrokeDashCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeThickness="1" Height="5" Grid.ColumnSpan="2" Grid.Row="1"/>
                                </Grid>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="RenderTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DisabledButtonBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource CommonMouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MouseUp}" x:Name="MouseUp_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MouseDown}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="MinWidth" Value="90"/>
    </Style>

    <!--List box item In Relation Object Collection Editor Style -->

    <Style x:Key="ListBoxItemInRelationObjectCollectionEditorStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border 
          Name="Border"
          Padding="2"
          BorderThickness="1"    
          VerticalAlignment="Stretch"
          SnapsToDevicePixels="true">
                        <ContentPresenter VerticalAlignment="Stretch" 
                                          HorizontalAlignment="Stretch"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background"
                    Value="{StaticResource SelectionObjectBackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{StaticResource SelectionObjectBorderBrush}"/>
                            <Setter TargetName="Border" Property="BorderThickness"
                                    Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                            Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Toggle button in grid style -->

    <Style x:Key="CellToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="Auto" Height="Auto" 
                            Focusable="False"
                            Background="Transparent"
                            Margin="0">
                        <Border Width="14" Height="Auto" 
                                BorderThickness="1,1,1,1" 
                                HorizontalAlignment="Right" 
                                CornerRadius="0" 
                                Focusable="False"
                                x:Name="border" BorderBrush="{StaticResource CellToggleButtonBorder}" Background="{StaticResource AquamarineSkinLightBlueColor}">

                            <Grid Width="8" Height="6" 
                              HorizontalAlignment="Center" 
                              VerticalAlignment="Center" 
                              Margin="0,3,0,0"  
                              IsHitTestVisible="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Path HorizontalAlignment="Center" Margin="0,0,0,0" 
                				Width="Auto" 
                				Fill="{x:Null}" 
                				Stretch="Fill"  
                				Grid.Column="0" 
                				Grid.Row="0" 
                				Data="M67.859386,6.2550833 L58.123562,18.624855 48.123172,6.249752" 
                				StrokeThickness="2" 
                				StrokeEndLineCap="Square" 
                				StrokeStartLineCap="Square" 
                				StrokeDashCap="Flat" 
                				StrokeLineJoin="Miter" 
                				VerticalAlignment="Center" 
                				Height="Auto" Stroke="{Binding Path=BorderBrush, ElementName=border, Mode=Default}" x:Name="path"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource CellToggleButtonMouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource CellToggleButtonPressedBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <!-- Map Tool button style -->
    <Style x:Key="MapToolButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundFill}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
        <Setter
            Property="Foreground"
            Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter1">
                            <ColorAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="border"
                                Storyboard.TargetProperty=
                                    "(Border.BorderBrush).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFEAEFF8"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="contentPresenter"
                                Storyboard.TargetProperty=
                                    "(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseEnter_Copy1">
                            <ColorAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="border"
                                Storyboard.TargetProperty=
                                    "(Border.BorderBrush).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFEAEFF8"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="contentPresenter"
                                Storyboard.TargetProperty=
                                    "(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard1">
                            <ColorAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="border"
                                Storyboard.TargetProperty=
                                    "(Panel.Background).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#B2017494"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#B204A3CF"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard_Copy1">
                            <ColorAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="border"
                                Storyboard.TargetProperty=
                                    "(Panel.Background).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#B204A3CF"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#B2017494"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border
                            x:Name="border"
                            Background="#B2017494"
                            BorderThickness="1,1,1,1"
                            CornerRadius="2,2,2,2"
                            BorderBrush="#FF013342"/>
                        <Border
                            x:Name="border1"
                            Margin="0,0,0,0"
                            Background="#00808080"
                            CornerRadius="2,2,2,2"
                            BorderThickness="1,1,1,1"/>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            RecognizesAccessKey="True"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            d:LayoutOverrides="Width"
                            Margin="0,0,0,0"
                            Opacity="1">
                            <ContentPresenter.BitmapEffect>
                                <OuterGlowBitmapEffect
                                    GlowColor="#FFFFFFFF"
                                    GlowSize="10"
                                    Opacity="0"/>
                            </ContentPresenter.BitmapEffect>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard
                                    x:Name="Storyboard_Copy1_BeginStoryboard"
                                    Storyboard="{StaticResource Storyboard1}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard
                                    x:Name="Storyboard1_BeginStoryboard"
                                    Storyboard="{StaticResource Storyboard_Copy1}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard
                                x:Name="OnMouseEnter_Copy1_BeginStoryboard"
                                Storyboard="{StaticResource OnMouseEnter_Copy1}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#B273888E"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <!-- Tooltip main style -->
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundTooltipBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="FontSize" Value="{StaticResource StandartHelpFontSize}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Margin="2,2,0,0" CornerRadius="2,2,2,2" 
                            Background="{StaticResource ShadowTooltipBrush}" 
                            VerticalAlignment="Stretch" 
                            HorizontalAlignment="Stretch">
                        <Border x:Name="Border"
                                Background="{StaticResource BackroundTooltipBrush}"
                                BorderBrush="{StaticResource BorderTooltipBrush}"
                                CornerRadius="2,2,2,2"
          BorderThickness="1"
          Margin="0,0,1,1"
          Width="{TemplateBinding Width}"
          Height="{TemplateBinding Height}"
                                RenderTransformOrigin="0,0">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="-1" Y="-1"/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <ContentPresenter
            Margin="2,2,2,2" 
            HorizontalAlignment="Stretch"
                                x:Name="tooltipContent"
            VerticalAlignment="Stretch" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="tooltipContent" Property="Content" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </Trigger> 
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Cell editor border style -->

    <Style x:Key="CellEditorBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderCheckBoxInGridBrush}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundCheckBoxInGridBrush}"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="CornerRadius" Value="0,0,0,0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Margin" Value="0,-1,0,0"/>
    </Style>


    <!-- Border main style -->

    <!--<Style x:Key="BorderMainStyle" TargetType="{x:Type Border}">
    </Style>-->


    <!-- Splitters main style -->

    <!--<Style x:Key="VerticalSplitterMainStyle" TargetType="{x:Type Splitter}">
    </Style>-->

    <!--<Style x:Key="HorisontalSplitterMainStyle" TargetType="{x:Type Splitter}">
    </Style>-->


  

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- Docking elements Styles -->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <!-- Close button icon -->
    <Style x:Key="CloseButtonIcon" TargetType="{x:Type ContentControl}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid Background="Transparent" x:Name="LayoutRoot">
                        <Grid.Resources>

                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseDown1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border1" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.0010000" Value="0"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.0010000" Value="0"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseDown_Copy1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.0010000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.0010000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>

                        </Grid.Resources>

                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="LayoutRoot">
                                <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="LayoutRoot">
                                <BeginStoryboard Storyboard="{StaticResource OnMouseLeave1}" x:Name="OnMouseLeave1_BeginStoryboard"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseDown" SourceName="LayoutRoot">
                                <BeginStoryboard Storyboard="{StaticResource OnMouseDown1}" x:Name="OnMouseDown1_BeginStoryboard"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseUp" SourceName="LayoutRoot">
                                <BeginStoryboard Storyboard="{StaticResource OnMouseDown_Copy1}" x:Name="OnMouseDown_Copy1_BeginStoryboard"/>
                            </EventTrigger>
                        </Grid.Triggers>
                        <Border Opacity="0" x:Name="border1" Background="{StaticResource ShapesBackgroundPressedBrush}"/>
                        <Border Background="{StaticResource ShapeCanvasBackgroundBrush}" BorderBrush="{StaticResource ShapesStrokeBrush}" BorderThickness="1,1,1,1" Visibility="Visible" Opacity="0" Margin="0,0,0,1" x:Name="border"/>
                        <Path HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Width="8" Height="8" Stretch="Fill" Stroke="{StaticResource ShapesStrokeBrush}" StrokeThickness="2" Data="M2.0000001,2 L16.000001,16 M16,2 L2.0000008,16" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Menu button icon -->
    <Style x:Key="MenuButtonIcon" TargetType="{x:Type ContentControl}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid Background="Transparent" x:Name="LayoutRoot">
                        <Grid.Resources>

                            <Storyboard x:Key="OnMouseEnter1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseLeave1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseDown1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border1" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="00:00:00.0010000">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnMouseDown_Copy1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.0010000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.0010000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>

                        </Grid.Resources>

                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="LayoutRoot">
                                <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="LayoutRoot">
                                <BeginStoryboard Storyboard="{StaticResource OnMouseLeave1}" x:Name="OnMouseLeave1_BeginStoryboard"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseDown" SourceName="LayoutRoot">
                                <BeginStoryboard Storyboard="{StaticResource OnMouseDown1}" x:Name="OnMouseDown1_BeginStoryboard"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseUp" SourceName="LayoutRoot">
                                <BeginStoryboard Storyboard="{StaticResource OnMouseDown_Copy1}" x:Name="OnMouseDown_Copy1_BeginStoryboard"/>
                            </EventTrigger>
                        </Grid.Triggers>
                        <Border Opacity="0" x:Name="border1" Background="{StaticResource ShapesBackgroundPressedBrush}"/>
                        <Border Background="{StaticResource ShapeCanvasBackgroundBrush}" BorderBrush="{StaticResource ShapesStrokeBrush}" BorderThickness="1,1,1,1" Visibility="Visible" Opacity="0" Margin="0,0,0,1" x:Name="border"/>
                        <Path HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Width="8" Height="4" Fill="{StaticResource ShapesStrokeBrush}" Stretch="Fill" Stroke="{x:Null}" Data="M5.9377497,6.5327452 L1.246322E-15,0.033578829 12,1.129329E-07 z"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Docking Grid Splitter template -->


    <Style x:Key="DockingSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template" Value="{DynamicResource DockingGridSplitterControlTemplate1}"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>
    <ControlTemplate x:Key="DockingGridSplitterControlTemplate1" TargetType="{x:Type GridSplitter}">
        <Border BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent"/>
    </ControlTemplate>


    <!-- Docking -->

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- Tool window Style -->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <Style x:Key="ToolWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ToolWindowBackgroundColor}" CornerRadius="5,5,5,5" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <ContentPresenter Width="Auto" Height="Auto"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tool window close button template -->

    <Style x:Key="ToolWindowCloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="Auto" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Border d:LayoutOverrides="Width, Height" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="Transparent" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" x:Name="border" Background="Transparent">
                            <Path Width="12" Height="12" Fill="Transparent" Stretch="Fill" Stroke="{StaticResource ToolWindowForegroundColor}" StrokeThickness="2" Data="M0.5,0.58350016 L16,15.9165 M15.9165,0.5 L0.58349921,16" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2,2,2,2"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ToolWindowForegroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- Gantt control Style -->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <LinearGradientBrush x:Key="SelectionInnerRowBackgroundBrush"
                        StartPoint="0.5,1"
                        EndPoint="0.5,0">

        <GradientStop Offset="1"
                    Color="#33F1F8FD" />

        <GradientStop Offset="0"
                    Color="#33017599" />
        <GradientStop Color="#33EDF6FB" Offset="0.985"/>

    </LinearGradientBrush>

    <SolidColorBrush x:Key="SelectionRowBorderBrush"
                    Color="#4C017599" />

    <SolidColorBrush x:Key="AlternateRowBackground" Color="#FFE7E7E7"/>

    <!-- Gantt control route name item style -->

    <Style x:Key="GanttControlNamelistItemStyle" TargetType="{x:Type ListBoxItem}">
        <!--<Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="White"/>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="{StaticResource AlternateRowBackground}"/>
            </Trigger>
            
        </Style.Triggers>-->
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnDragEnter1">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FF7BB3C4"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnDragLeave1">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="Transparent"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="TopLevelGrid">
                        <Border SnapsToDevicePixels="true" 
                                x:Name="Bd" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}"
                                VerticalAlignment="Stretch" 
                                HorizontalAlignment="Stretch"
                                Height="{StaticResource GanttControlDataHeight}">
                        </Border>
                        <Border x:Name="TopBorder" 
                                Background="Transparent"
                                Height="{Binding ElementName=Bd, Path = ActualHeight}"
                                Width="{Binding ElementName=Bd, Path = ActualWidth}"
                                VerticalAlignment="Stretch" 
                                HorizontalAlignment="Stretch"/>
                        <ContentPresenter 
                                SnapsToDevicePixels="True" 
                                Width="Auto" Height="Auto" 
                                Grid.IsSharedSizeScope="False" 
                                ScrollViewer.CanContentScroll="False" 
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Center"
                                Content="{Binding Path=Tag.Name}"/>
                    </Grid>
                    <ControlTemplate.Triggers>


                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter TargetName="Bd" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource AlternateRowBackground}"/>
                        </Trigger>


                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="TopBorder" Property="Background" Value="{StaticResource SelectionInnerRowBackgroundBrush}"/>
                            <Setter TargetName="TopBorder" Property="BorderThickness" Value="0,1,0,1"/>
                            <Setter TargetName="TopBorder" Property="BorderBrush" Value="{StaticResource SelectionRowBorderBrush}"/>
                            <Setter TargetName="Bd" Property="Background" Value="White"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="DragDrop.DragEnter">
                            <BeginStoryboard Storyboard="{StaticResource OnDragEnter1}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="DragDrop.DragLeave">
                            <BeginStoryboard Storyboard="{StaticResource OnDragLeave1}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="DragDrop.Drop">
                            <BeginStoryboard Storyboard="{StaticResource OnDragLeave1}"/>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <converters:GanttTooltipConverter x:Key="ganttTooltipConverter"/>

    <!-- Gantt control alternate row style. -->

    <Style x:Key="GanttControlAlternateRowItemStyle" TargetType="{x:Type ListBoxItem}">
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="White"></Setter>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="{StaticResource AlternateRowBackground}"></Setter>
            </Trigger>

        </Style.Triggers>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border SnapsToDevicePixels="true" 
                        x:Name="Bd" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Padding="{TemplateBinding Padding}"
                        VerticalAlignment="Stretch" 
                            HorizontalAlignment="Stretch"
                            Height="{StaticResource GanttControlDataHeight}">
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectionInnerRowBackgroundBrush}"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="0,1,0,1"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource SelectionRowBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Color picker list box style -->

    <Style x:Key="GridColorPickerColorItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border SnapsToDevicePixels="true" 
                        x:Name="Bd" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Padding="{TemplateBinding Padding}"
                        VerticalAlignment="Stretch" 
                            HorizontalAlignment="Stretch"
                            Height="24">
                        <ContentPresenter 
                                SnapsToDevicePixels="True" 
                                Width="Auto" Height="Auto" 
                                Grid.IsSharedSizeScope="False" 
                                ScrollViewer.CanContentScroll="False" 
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Center"
                                Content="{Binding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- Group box Style -->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->


    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="BorderThickness"
          Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid Background="{StaticResource GroupBoxBackground}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="4"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="4"/>
                        </Grid.RowDefinitions>
                        <Border CornerRadius="4"
                  Grid.Row="1"
                  Grid.RowSpan="3"
                  Grid.Column="0"
                  Grid.ColumnSpan="4"
                  BorderBrush="Transparent" Background="{x:Null}"/>
                        <Border CornerRadius="4,4,4,4"
                        	Grid.Row="1"
                        	Grid.RowSpan="3"
                        	Grid.ColumnSpan="4"
                        	BorderThickness="1,1,1,1" BorderBrush="{StaticResource AquamarineSkinLightBlueColor}"/>
                        <!-- ContentPresenter for the header -->
                        <Border x:Name="Header"
                  Padding="6,0,6,0"
                  Grid.Row="0"
                  Grid.RowSpan="2"
                  Grid.Column="1" Background="{StaticResource GroupBoxBackground}">
                            <ContentPresenter ContentSource="Header" 
                              RecognizesAccessKey="True" />
                        </Border>
                        <!-- Primary content for GroupBox -->
                        <ContentPresenter Grid.Row="2"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Transparent group box style -->

    <SolidColorBrush x:Key="GroupBoxHeaderBrush" Color="#0046D5"/>

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>

    <Style x:Key="TransparentGroupBoxStyle" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" 
                                    Grid.ColumnSpan="4" 
                                    Grid.Row="1" 
                                    Grid.RowSpan="3" 
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="Transparent" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="4"
                                    SnapsToDevicePixels="True"/>
                        <Border x:Name="Header" SnapsToDevicePixels="True" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="3,0,3,0">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.Foreground="{StaticResource HeaderTextColor}" ContentSource="Header" RecognizesAccessKey="True"/>
                        </Border>
                        <ContentPresenter SnapsToDevicePixels="True" Margin="{TemplateBinding Padding}" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2"/>
                        <Border Grid.ColumnSpan="4" 
                                    Grid.Row="1" 
                                    Grid.RowSpan="3" 
                                    SnapsToDevicePixels="True"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="4">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding Path="ActualWidth" ElementName="Header"/>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FFE4E5E5"/>
    </Style>

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- Days radio button style -->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->


    <Style TargetType="{x:Type RadioButton}" x:Key="DaysRadioButtonStyle">
        <Setter Property="Background" Value="{StaticResource CheckRadioButtonFillNormal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckRadioButtonStrokeNormal}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <systemControls:BulletDecorator Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <systemControls:BulletDecorator.Bullet>
                            <Grid Width="Auto" Height="Auto" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5" x:Name="grid">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.75" ScaleY="0.75"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Ellipse HorizontalAlignment="Stretch" 
                                         VerticalAlignment="Stretch" 
                                         Stroke="{StaticResource CheckRadioButtonOutsideEllipseBorderBrush}" 
                                         x:Name="ellipse1" StrokeThickness="1" Width="16" Height="16">
                                    <Ellipse.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                            <GradientStop Color="#FFD2D2D3" Offset="0.888"/>
                                        </LinearGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse HorizontalAlignment="Stretch" 
                                	Margin="0,0,0,0" 
                                	Width="8" 
                                	Height="8" 
                                	VerticalAlignment="Stretch" 
                                	x:Name="ellipse" 
                                	Visibility="Visible" Fill="#FFC0C0C0" Stroke="#FF8D8D8D" Opacity="0.3" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Grid>
                        </systemControls:BulletDecorator.Bullet>
                        <Grid Width="Auto" Height="Auto" HorizontalAlignment="Left" Margin="1,0,0,0">
                            <ContentPresenter RecognizesAccessKey="True" Margin="1,0,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" d:LayoutOverrides="Width, Height" x:Name="contentPresenter"/>
                            <Path Margin="0,0,0,0" VerticalAlignment="Bottom" Height="1" Fill="#FFFFFFFF" Stretch="Fill" Stroke="{TemplateBinding Foreground}" Data="M1,13.125 L58.5,13.125" Visibility="Hidden" x:Name="path" HorizontalAlignment="Stretch" Width="{Binding Path=ActualWidth, ElementName=contentPresenter, Mode=Default}"/>
                        </Grid>
                    </systemControls:BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="path" Value="Visible"/>
                            <Setter Property="Margin" TargetName="path" Value="1,0,1,0"/>
                            <Setter Property="HorizontalAlignment" TargetName="path" Value="Left"/>
                            <Setter Property="Fill" TargetName="ellipse">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FFD2D2D3" Offset="0.888"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ellipse1">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.807,0.742" StartPoint="0.069,0.068">
                                        <GradientStop Color="#FFA7FF9E" Offset="0"/>
                                        <GradientStop Color="#FFEBFDE9" Offset="0.888"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="ellipse" Value="Visible"/>
                            <Setter Property="Opacity" TargetName="ellipse" Value="1"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="#FF166D02"/>
                            <Setter Property="Fill" TargetName="ellipse">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.731,0.78" StartPoint="0.049,0.048">
                                        <GradientStop Color="#FFC9CBC8" Offset="0"/>
                                        <GradientStop Color="#FF138601" Offset="0.445"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalAlignment" TargetName="ellipse" Value="Stretch"/>
                            <Setter Property="VerticalAlignment" TargetName="ellipse" Value="Stretch"/>
                            <Setter Property="HorizontalAlignment" TargetName="grid" Value="Stretch"/>
                            <Setter Property="VerticalAlignment" TargetName="grid" Value="Stretch"/>
                            <Setter Property="RenderTransform" TargetName="ellipse">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" TargetName="ellipse" Value="8"/>
                            <Setter Property="Height" TargetName="ellipse" Value="8"/>
                            <Setter Property="Width" TargetName="ellipse1" Value="16"/>
                            <Setter Property="Height" TargetName="ellipse1" Value="16"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Stroke" TargetName="ellipse1" Value="{StaticResource DisabledForegroundBrush}"/>
                            <Setter Property="Fill" TargetName="ellipse1" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="Opacity" TargetName="ellipse" Value="1"/>
                            <Setter Property="Fill" TargetName="ellipse" Value="#FFC0C0C0"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="#FF8D8D8D"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{StaticResource BorderCheckBoxInGridBrush}"/>
    </Style>


    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- Common radio button style -->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <Style TargetType="{x:Type RadioButton}" x:Key="DefaultRadioButtonStyle">
        <Style.Triggers>
        </Style.Triggers>
        <Setter Property="Background" Value="{StaticResource CheckRadioButtonFillNormal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckRadioButtonStrokeNormal}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <systemControls:BulletDecorator Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <systemControls:BulletDecorator.Bullet>
                            <Grid Width="16" Height="16" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,0,0">
                                <Ellipse HorizontalAlignment="Stretch" 
                                         VerticalAlignment="Stretch" 
                                         Stroke="{StaticResource CheckRadioButtonOutsideEllipseBorderBrush}" 
                                         x:Name="ellipse1" StrokeThickness="1">
                                    <Ellipse.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                            <GradientStop Color="#FFD2D2D3" Offset="0.888"/>
                                        </LinearGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse HorizontalAlignment="Stretch" 
                                	Margin="0,0,0,0" 
                                	Width="8" 
                                	Height="8" 
                                	VerticalAlignment="Stretch" 
                                	x:Name="ellipse" 
                                	Visibility="Visible" Fill="#FFC0C0C0" Stroke="#FF8D8D8D" Opacity="0.3"/>
                            </Grid>
                        </systemControls:BulletDecorator.Bullet>
                        <Grid Width="Auto" Height="Auto" HorizontalAlignment="Left" Margin="1,0,0,0">
                            <ContentPresenter RecognizesAccessKey="True" Margin="1,0,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" d:LayoutOverrides="Width, Height" x:Name="contentPresenter"/>
                            <Path Margin="0,0,0,0" VerticalAlignment="Bottom" Height="1" Fill="#FFFFFFFF" Stretch="Fill" Stroke="{TemplateBinding Foreground}" Data="M1,13.125 L58.5,13.125" Visibility="Hidden" x:Name="path" HorizontalAlignment="Stretch" Width="{Binding Path=ActualWidth, ElementName=contentPresenter, Mode=Default}"/>
                        </Grid>
                    </systemControls:BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="path" Value="Visible"/>
                            <Setter Property="Margin" TargetName="path" Value="1,0,1,0"/>
                            <Setter Property="HorizontalAlignment" TargetName="path" Value="Left"/>
                            <Setter Property="Fill" TargetName="ellipse">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FFD2D2D3" Offset="0.888"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ellipse1">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.807,0.742" StartPoint="0.069,0.068">
                                        <GradientStop Color="#FFA7FF9E" Offset="0"/>
                                        <GradientStop Color="#FFEBFDE9" Offset="0.888"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="ellipse" Value="Visible"/>
                            <Setter Property="Opacity" TargetName="ellipse" Value="1"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="#FF166D02"/>
                            <Setter Property="Fill" TargetName="ellipse">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.731,0.78" StartPoint="0.049,0.048">
                                        <GradientStop Color="#FFC9CBC8" Offset="0"/>
                                        <GradientStop Color="#FF138601" Offset="0.445"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Stroke" TargetName="ellipse1" Value="{StaticResource DisabledForegroundBrush}"/>
                            <Setter Property="Fill" TargetName="ellipse1" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="Opacity" TargetName="ellipse" Value="1"/>
                            <Setter Property="Fill" TargetName="ellipse" Value="#FFC0C0C0"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="#FF8D8D8D"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{StaticResource BorderCheckBoxInGridBrush}"/>
    </Style>

    <Style TargetType="{x:Type RadioButton}" BasedOn ="{StaticResource DefaultRadioButtonStyle}"/>

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- Map layers widget radio button style -->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <Style TargetType="{x:Type RadioButton}" x:Key="MapLayersWidgetRadioButtonStyle" BasedOn="{StaticResource DefaultRadioButtonStyle}">
        <Style.Triggers>
        </Style.Triggers>
        <Setter Property="Background" Value="{StaticResource CheckRadioButtonFillNormal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckRadioButtonStrokeNormal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{StaticResource LightBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="{StaticResource MiddleFontSize}"/>
    </Style>

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- Status label for pages with selection status style-->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <Style x:Key="SelectionPageStatusLabelStyle" TargetType="{x:Type Label}" >
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontSize" Value="{StaticResource MiddleFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}" />
        <Setter Property="Foreground" Value="{StaticResource StatusTextColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="1,1,1,1" />
        <Setter Property="Margin" Value="5,1,1,1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border SnapsToDevicePixels="true"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}" >
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           RecognizesAccessKey="False" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false" >
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- Color picker slider style -->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->


    <Style x:Key="ColorPickerSliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalColorPickerSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="11"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Foreground" Value="Green"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Border Width="40" Margin="0,0,0,0" BorderThickness="0,1,0,1" BorderBrush="#7F222222" SnapsToDevicePixels="True" x:Name="border">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#19F7F7F7" Offset="0.643"/>
                                    <GradientStop Color="#99FFFFFF" Offset="0.232"/>
                                    <GradientStop Color="#19FFFFFF" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Path RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right" Margin="0,0,0,0" Width="4" Fill="#7F060606" Stretch="Fill" Stroke="{x:Null}" StrokeLineJoin="Round" Data="M0.2500328,5.125 L3.923353,0.062922294 3.8836566,9.9691032 z" SnapsToDevicePixels="True" x:Name="path">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path HorizontalAlignment="Left" Margin="0,0,0,0" Width="4" Fill="#7F060606" Stretch="Fill" Stroke="{x:Null}" StrokeLineJoin="Round" Data="M0.2500328,5.125 L3.923353,0.062922294 3.8836566,9.9691032 z" SnapsToDevicePixels="True" RenderTransformOrigin="0.5,0.5" x:Name="path1">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="-1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="#CC060606"/>
                            <Setter Property="Fill" TargetName="path1" Value="#CC060606"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#CC222222"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="border" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorPickerSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Foreground" Value="#FFA1A192"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border SnapsToDevicePixels="true" 
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" 
                                                          Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TickBar Visibility="Collapsed" 
                                             x:Name="LeftTick" 
                                             Width="4" 
                                             Grid.Column="0"
                                             Fill="{TemplateBinding Foreground}" 
                                             Placement="Left"/>
                                    <TickBar Visibility="Collapsed" 
                                             x:Name="RightTick" 
                                             Width="4" 
                                             Grid.Column="2" 
                                             Fill="{TemplateBinding Foreground}" 
                                             Placement="Right"/>
                                    <Track x:Name="PART_Track" Grid.Column="1">
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb" 
                                                   Style="{StaticResource VerticalColorPickerSliderThumbStyle}" 
                                                   Width="Auto"/>
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton 
                                                Style="{StaticResource ColorPickerSliderRepeatButtonStyle}" 
                                                Command="{x:Static Slider.IncreaseLarge}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton 
                                                Style="{StaticResource ColorPickerSliderRepeatButtonStyle}" 
                                                Command="{x:Static Slider.DecreaseLarge}"/>
                                        </Track.DecreaseRepeatButton>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement" Value="TopLeft">
                                    <Setter Property="Visibility" TargetName="LeftTick" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="BottomRight">
                                    <Setter Property="Visibility" TargetName="RightTick" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="Both">
                                    <Setter Property="Visibility" TargetName="LeftTick" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="RightTick" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Color picker button style -->

    <Style x:Key="ColorPickerButtonStyle" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource ColorPickerButtonBorderColor}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Stroke="{StaticResource ColorPickerButtonBorderColor}" 
                                       RadiusX="2" 
                                       RadiusY="2" 
                                       x:Name="rectangle" 
                                       Fill="{StaticResource ColorPickedButtonBackground}"/>
                        <ContentPresenter Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" 
                                          Margin="3,3,3,3" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" 
                                        Value="{StaticResource ColorPickedButtonPressedBackground}"/>
                            <Setter Property="Stroke" TargetName="rectangle" 
                                        Value="{StaticResource ColorPickerButtonBorderColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" 
                                        Value="{StaticResource DiscreteColorPickerFocusedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource ColorPickerButtonBorderColor}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
    </Style>


    <!-- Discrete color picker color button style -->

    <Style x:Key="DiscreteColorPickerColorStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1.1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1.1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard_Copy1">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Width="20" Height="20" 
                            x:Name="border" 
                            BorderThickness="1,1,1,1" 
                            Margin="2,2,2,2" 
                            CornerRadius="2,2,2,2">
                        <Border BorderBrush="LightGray"
                                BorderThickness="1,1,1,1" 
                                Margin="1,1,1,1" 
                                CornerRadius="2,2,2,2" x:Name="border1" RenderTransformOrigin="0.5,0.5">
                            <Border.BitmapEffect>
                                <DropShadowBitmapEffect ShadowDepth="1" Softness="0.1" Opacity="0" Direction="300"/>
                            </Border.BitmapEffect>
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Grid Width="Auto" 
                              Height="Auto" 
                              x:Name="grid" 
                              Margin="0,0,0,0" 
                              RenderTransformOrigin="0.5,0.5">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Rectangle Margin="0,0,0,0" Stroke="{x:Null}" Fill="{TemplateBinding Background}" RadiusX="2" RadiusY="2" x:Name="rectangle1" StrokeThickness="0"/>
                                <Rectangle Margin="0,0,0,0" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="rectangle" StrokeThickness="0">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#00F7F7F7" Offset="1"/>
                                            <GradientStop Color="#66FFFFFF" Offset="0"/>
                                            <GradientStop Color="#66FFFFFF" Offset="0.004"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="RenderTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="border1">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BitmapEffect" TargetName="border1">
                                <Setter.Value>
                                    <DropShadowBitmapEffect Opacity="1" ShadowDepth="1" Softness="0.1" Direction="300"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- IsViolated indicator style -->

    <Style x:Key="IsViolatedCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="grid" Opacity="0">
                        <!--<ContentControl ContentTemplate="{StaticResource ViolatedLocationStopStatus16x16}"/>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="grid" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Color cell content style -->

    <Style x:Key="ColorControlStyle" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">

                    <Grid Margin="1,1,1,1">
                        <Border x:Name="mainColorBorder" VerticalAlignment="Stretch" 
                        HorizontalAlignment="Stretch" 
                        CornerRadius="2" 
                        BorderThickness="1"
                        BorderBrush="{StaticResource GanttBorderBrush}"
                        Background="{TemplateBinding Background}"/>
                        <Border 
                    CornerRadius="1,1,1,1" 
                    BorderBrush="{x:Null}" 
                    BorderThickness="0,0,0,0" 
                    Margin="1,1,1,1" 
                    VerticalAlignment="Stretch" 
                    Height="Auto">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.531,0.952" StartPoint="0.531,-0.048">
                                    <GradientStop Color="#99FFFFFF" Offset="0"/>
                                    <GradientStop Color="#0CFFFFFF" Offset="0.173"/>
                                    <GradientStop Color="#19303030" Offset="1"/>
                                    <GradientStop Color="#0CFFFFFF" Offset="0.958"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Map control popup style  -->

    <!-- Map control popup dotted line style  -->
    <Style x:Key="MapPopupDottedLineStyle" TargetType="{x:Type Line}">
        <Setter Property="StrokeThickness" Value="2"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Fill" Value="#FF00FF00"/>
        <Setter Property="Stroke" Value="#FF000000"/>
        <Setter Property="StrokeDashOffset" Value="3"/>
        <Setter Property="StrokeDashArray" Value="2 2"/>
    </Style>

    <!-- Map control ellipse popup style  -->
    <Style x:Key="MapPopupEllipseStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            RenderTransformOrigin="0,0">
                        <Border x:Name="Border"
                                BorderThickness="1"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                RenderTransformOrigin="0,0">

                            <Ellipse HorizontalAlignment="Stretch" 
                                     VerticalAlignment="Stretch" 
                                     Cursor="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Popup}}, Path=Cursor}"
                                     StrokeThickness="2" Width="10" Height="10">
                                <Ellipse.Fill>
                                    <SolidColorBrush Color="Green"/>
                                </Ellipse.Fill>
                                <Ellipse.Stroke>
                                    <SolidColorBrush Color="Black"/>
                                </Ellipse.Stroke>
                            </Ellipse>
                        </Border>
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                            </TransformGroup>
                        </Border.RenderTransform>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Map control popup style  -->
    <Style x:Key="MapPopupStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border Margin="2,2,0,0" CornerRadius="2,2,2,2" 
                            Background="{StaticResource ShadowTooltipBrush}" 
                            VerticalAlignment="Stretch" 
                            HorizontalAlignment="Stretch">
                        <Border x:Name="Border"
                                CornerRadius="2,2,2,2"
                                Background="{StaticResource LightBrush}"
                                BorderBrush="{StaticResource SolidBorderBrush}"
                                BorderThickness="1"
                                Margin="0,0,1,1"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                RenderTransformOrigin="0,0">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="-1" Y="-1"/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <ContentPresenter
            Margin="2,2,2,2" 
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch" />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- Combo boxes styles  -->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <!-- Combo box Item style -->
    <Style  x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border 
          Name="Border"
          Padding="2"
          Focusable="False"
          BorderThickness="1"
          SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" 
                                    Property="Background" 
                                    Value="{StaticResource SelectionObjectBackgroundBrush}"/>
                            <Setter TargetName="Border" 
                                    Property="BorderBrush" 
                                    Value="{StaticResource SelectionObjectBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" 
                                 Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox Editable TextBox -->
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer Focusable="false"
                                  Padding="0"
                                  Margin="0"
                                  Background="Transparent" 
                                  x:Name="PART_ContentHost" 
                                  CanContentScroll="False"
                                  HorizontalScrollBarVisibility="Hidden" 
                                  VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Combo box transparent button style -->
    <Style x:Key="ComboBoxTransparentButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Focusable="False" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition SharedSizeGroup="ComboBoxButton" Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Width="14" Height="Auto" 
                                BorderThickness="1,1,1,1" 
                                BorderBrush="{StaticResource CellToggleButtonBorder}" 
                                CornerRadius="0"
                                Focusable="False"
                                Grid.Column="1" 
                                x:Name="border" Background="{StaticResource AquamarineSkinLightBlueColor}">

                            <Grid Width="8" Focusable="False" Height="6" 
                              HorizontalAlignment="Center" 
                              VerticalAlignment="Center" 
                              Margin="0,3,0,0"  
                              IsHitTestVisible="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Path HorizontalAlignment="Center" Margin="0,0,0,0" 
                				Width="Auto" 
                				Fill="{x:Null}" 
                				Stretch="Fill" 
                				Stroke="{Binding Path=BorderBrush, ElementName=border, Mode=Default}" 
                				Grid.Column="0" 
                				Grid.Row="0" 
                				Data="M67.859386,6.2550833 L58.123562,18.624855 48.123172,6.249752" 
                				StrokeThickness="2" 
                				StrokeEndLineCap="Square" 
                				StrokeStartLineCap="Square" 
                				StrokeDashCap="Flat" 
                				StrokeLineJoin="Miter" 
                				VerticalAlignment="Center" 
                                Focusable="False"
                				Height="Auto" x:Name="path"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource CellToggleButtonMouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource CellToggleButtonPressedBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Combo box in Import page button style -->
    <Style x:Key="ComboBoxImportButtonStyle" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
        </Style.Triggers>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Focusable="False" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition SharedSizeGroup="ComboBoxButton" Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Width="26" Height="Auto" 
                                BorderThickness="1,1,1,1" 
                                BorderBrush="#00024050" 
                                CornerRadius="0"
                                Focusable="False"
                                Grid.Column="1" 
                                x:Name="border" Background="#00357A9A">

                            <Grid Width="8" Focusable="False" Height="6" 
                        		HorizontalAlignment="Center" 
                        		VerticalAlignment="Center" 
                        		Margin="0,3,10,0"  
                        		IsHitTestVisible="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Path HorizontalAlignment="Center" Margin="0,0,0,0" 
                        			Width="Auto" 
                        			Fill="{x:Null}" 
                        			Stretch="Fill" 
                        			Stroke="#FF024050" 
                        			Grid.Column="0" 
                        			Grid.Row="0" 
                        			Data="M67.859386,6.2550833 L58.123562,18.624855 48.123172,6.249752" 
                        			StrokeThickness="2" 
                        			StrokeEndLineCap="Square" 
                        			StrokeStartLineCap="Square" 
                        			StrokeDashCap="Flat" 
                        			StrokeLineJoin="Miter" 
                        			VerticalAlignment="Center" 
                        			Focusable="False"
                        			Height="Auto" x:Name="path">
                                    <Path.BitmapEffect>
                                        <DropShadowBitmapEffect Color="#FF939393" ShadowDepth="1" Softness="0.05" Opacity="0"/>
                                    </Path.BitmapEffect>
                                </Path>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="path" Value="#FF067491"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox Editable Template -->
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid SnapsToDevicePixels="true">
            <Border x:Name="Bd" Background="{TemplateBinding Background}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Focusable="False"
                    Padding="0" BorderBrush="{StaticResource AquamarineSkinLightBlueColor}">
                <Grid Grid.IsSharedSizeScope="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition SharedSizeGroup="ComboBoxButton" Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox 
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                        Margin="1" 
                        x:Name="PART_EditableTextBox" 
                        Style="{StaticResource ComboBoxEditableTextBox}" 
                        Grid.Column="1" 
                        
                        IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ToggleButton 
                        Background="{x:Null}" 
                        Style="{StaticResource ComboBoxTransparentButtonStyle}" 
                        Grid.ColumnSpan="3" 
                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False"/>
                </Grid>
            </Border>
            <Popup Focusable="false" AllowsTransparency="true" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" x:Name="PART_Popup">
                <Microsoft_Windows_Themes:SystemDropShadowChrome MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="Shdw" Color="Transparent">
                    <Border 
                        x:Name="DropDownBorder"
                		BorderThickness="1,1,1,1" Margin="0,0,3,3" BorderBrush="{StaticResource ContentBorderColor}" Background="{StaticResource LightBrush}">
                        <ScrollViewer SnapsToDevicePixels="True" Background="{StaticResource LightBrush}" Width="Auto" Height="Auto" Margin="0,0,0,0" BorderBrush="{StaticResource BorderCheckBoxInGridBrush}">
                            <StackPanel 
                								IsItemsHost="True" 
                								KeyboardNavigation.DirectionalNavigation="Contained" Margin="1,1,1,1" />
                        </ScrollViewer>
                    </Border>
                </Microsoft_Windows_Themes:SystemDropShadowChrome>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Color" TargetName="Shdw" Value="{StaticResource DropDownShadowColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Combo box main style (selected item's template is default ) -->
    <Style x:Key="DefaultComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="true" Focusable="False">
                        <Border x:Name="Bd" 
                                Focusable="False"
                                Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="0" BorderBrush="{StaticResource AquamarineSkinLightBlueColor}">
                            <Grid Grid.IsSharedSizeScope="true" Focusable="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition SharedSizeGroup="ComboBoxButton" Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Margin="{TemplateBinding Padding}" 
                                        x:Name="SelectedItemBorder" 
                                        Focusable="False"
                                        Grid.ColumnSpan="2"/>
                                <ContentPresenter 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="0" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                    Grid.Column="1" 
                                    Focusable="False"
                                    Content="{TemplateBinding SelectionBoxItem}" 
                                   />
                                <Image Grid.Column="2" x:Name="CellErrorGlyph" 
                                	Source="/ESRI.ArcLogistics.App;component/Resources/PNG_Icons/IncompleteB16.png"
                                	Width="16"
                                	Height="16"
                                	Visibility="Collapsed"
                                	VerticalAlignment="Center"
                                	HorizontalAlignment="Center"                       
                                	Stretch="None"
                                	Focusable="False"
                                	Margin="1,0,2,0"/>
                                <ToggleButton Style="{StaticResource ComboBoxTransparentButtonStyle}" 
                                	Grid.ColumnSpan="4" 
                                    x:Name="PART_OpenButton"
                                	Width="Auto" 
                                	Height="Auto" 
                                	IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                	Focusable="False"/>
                            </Grid>
                        </Border>
                        <Popup Focusable="false" 
                               AllowsTransparency="true" 
                               IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                               Placement="Bottom" 
                               PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                               x:Name="PART_Popup">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome 
                                MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                MinWidth="{TemplateBinding ActualWidth}" 
                                x:Name="Shdw" 
                                Color="Transparent">
                                <Border 
                        x:Name="DropDownBorder"
                		BorderThickness="1,1,1,1" Margin="0,0,3,3" BorderBrush="{StaticResource ContentBorderColor}" Background="{StaticResource LightBrush}">
                                    <ScrollViewer SnapsToDevicePixels="True" Background="{StaticResource LightBrush}" Width="Auto" Height="Auto" Margin="0,0,0,0" BorderBrush="{StaticResource BorderCheckBoxInGridBrush}">
                                        <StackPanel 
                								IsItemsHost="True" 
                								KeyboardNavigation.DirectionalNavigation="Contained" Margin="1,1,1,1" />
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter TargetName="CellErrorGlyph" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelectionBoxHighlighted" Value="true"/>
                                <Condition Property="IsDropDownOpen" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </MultiTrigger>-->
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Color" TargetName="Shdw" Value="{StaticResource DropDownShadowColor}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="0,1"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Combo box default style -->
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DefaultComboBoxStyle}"/>

    <!-- Combo box main style (selected item's template is same as item tamplate ) -->
    <Style x:Key="comboBoxWithSelectedItemStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="true" Focusable="False">
                        <Border x:Name="Bd" 
                                Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Focusable="False"
                                Padding="0" BorderBrush="{StaticResource AquamarineSkinLightBlueColor}">
                            <Grid Grid.IsSharedSizeScope="true" Focusable="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition SharedSizeGroup="ComboBoxButton" Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Margin="{TemplateBinding Padding}" 
                                        x:Name="SelectedItemBorder" 
                                        Focusable="False"
                                        Grid.ColumnSpan="2"/>
                                <ContentPresenter 
                                    Focusable="False"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="1" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                    Grid.Column="1" 
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                    Content="{TemplateBinding SelectionBoxItem}" 
                                   />
                                <ToggleButton Style="{StaticResource ComboBoxTransparentButtonStyle}" 
                                              Grid.ColumnSpan="4" 
                                              Width="Auto" 
                                              Height="Auto" 
                                              Focusable="False"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Image Grid.Column="2" x:Name="CellErrorGlyph" 
                           Source="/ESRI.ArcLogistics.App;component/Resources/PNG_Icons/IncompleteB16.png"
                           Width="15"
                           Height="16"
                           Focusable="False"
                           Visibility="Collapsed"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           Stretch="None"
                           Margin="1,0,2,0"/>
                            </Grid>
                        </Border>
                        <Popup Focusable="false" 
                               AllowsTransparency="true" 
                               IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                               Placement="Bottom" 
                               PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                               x:Name="PART_Popup">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome 
                                MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                MinWidth="{TemplateBinding ActualWidth}" 
                                x:Name="Shdw" 
                                Color="Transparent">
                                <Border 
                        x:Name="DropDownBorder"
                		BorderThickness="1,1,1,1" 
                                    Margin="0,0,3,3" 
                                    BorderBrush="{StaticResource ContentBorderColor}" 
                                    Background="{StaticResource LightBrush}">
                                    <ScrollViewer SnapsToDevicePixels="True" Background="{StaticResource LightBrush}" Width="Auto" Height="Auto" Margin="0,0,0,0" BorderBrush="{StaticResource BorderCheckBoxInGridBrush}">
                                        <StackPanel 
                								IsItemsHost="True" 
                								KeyboardNavigation.DirectionalNavigation="Contained" Margin="1,1,1,1" />
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter TargetName="CellErrorGlyph" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelectionBoxHighlighted" Value="true"/>
                                <Condition Property="IsDropDownOpen" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </MultiTrigger>-->

                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Color" TargetName="Shdw" Value="{StaticResource DropDownShadowColor}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="0,1"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Import pages combo box style -->
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DefaultComboBoxStyle}" x:Key="ImportComboBoxStyle">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="true" Focusable="False">
                        <Border x:Name="Bd" 
                                FocusVisualStyle="{x:Null}"
                                Focusable="False"
                                Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="1" BorderBrush="{StaticResource AquamarineSkinLightBlueColor}">
                            <Grid Grid.IsSharedSizeScope="true" Focusable="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition SharedSizeGroup="ComboBoxButton" Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Margin="{TemplateBinding Padding}" 
                                        x:Name="SelectedItemBorder" 
                                        FocusVisualStyle="{x:Null}"
                                        Focusable="False"
                                        Grid.ColumnSpan="2"/>
                                <ContentPresenter 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="{TemplateBinding Padding}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                    Grid.Column="1" 
                                    Focusable="False"
                                    FocusVisualStyle="{x:Null}"
                                    Content="{TemplateBinding SelectionBoxItem}"/>
                                <Image Grid.Column="2" x:Name="CellErrorGlyph" 
                                	Source="/ESRI.ArcLogistics.App;component/Resources/PNG_Icons/IncompleteB16.png"
                                	Width="16"
                                	Height="16"
                                	Visibility="Collapsed"
                                	VerticalAlignment="Center"
                                	HorizontalAlignment="Center"                       
                                	Stretch="None"
                                	Focusable="False"
                                	Margin="1,0,2,0"/>
                                <ToggleButton 
                                	Grid.ColumnSpan="4" 
                                    x:Name="PART_OpenButton"
                                	Width="Auto" 
                                	Height="Auto" 
                                    FocusVisualStyle="{x:Null}"
                                    Style="{StaticResource ComboBoxImportButtonStyle}"
                                	IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                	Focusable="False"/>
                            </Grid>
                        </Border>
                        <Popup Focusable="false" 
                               AllowsTransparency="true" 
                               IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                               Placement="Bottom" 
                               PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                               x:Name="PART_Popup">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome 
                                MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                MinWidth="{TemplateBinding ActualWidth}" 
                                x:Name="Shdw" 
                                Color="Transparent">
                                <Border 
                        x:Name="DropDownBorder"
                		BorderThickness="1,1,1,1" Margin="0,0,3,3" BorderBrush="{StaticResource ContentBorderColor}" Background="{StaticResource LightBrush}">
                                    <ScrollViewer SnapsToDevicePixels="True" Background="{StaticResource LightBrush}" Width="Auto" Height="Auto" Margin="0,0,0,0" BorderBrush="{StaticResource BorderCheckBoxInGridBrush}">
                                        <StackPanel 
                								IsItemsHost="True" 
                								KeyboardNavigation.DirectionalNavigation="Contained" Margin="1,1,1,1" />
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter TargetName="CellErrorGlyph" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelectionBoxHighlighted" Value="true"/>
                                <Condition Property="IsDropDownOpen" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </MultiTrigger>-->
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Color" TargetName="Shdw" Value="{StaticResource DropDownShadowColor}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- Navigation pane styles  -->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <!-- Navigation pane page button style -->
    <Style x:Key="NavigationPanePageButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{StaticResource NavigationPanePageButtonBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="{x:Null}" x:Name="grid" SnapsToDevicePixels="True" MinWidth="30">
                        <Border BorderBrush="{StaticResource AquamarineSkinMainWindowBorder}" BorderThickness="0,0,0,0" x:Name="border" Background="{StaticResource NavigationPanePageButtonBackground}" Margin="0,0,0,0">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Width="Auto" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="contentPresenter"/>
                        </Border>
                        <Border Margin="0,0,0,0" HorizontalAlignment="Right" Width="1" BorderThickness="0,0,1,0" BorderBrush="{StaticResource AquamarineSkinMainWindowBorder}" x:Name="border1" Background="{StaticResource AquamarineSkinMainWindowBorder}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource NavigationPanePageButtonPressedBackground}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="0,0,0,0"/>
                            <Setter Property="Margin" TargetName="border" Value="0,0,0,0"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource NavigationPanePageButtonPressedBackground}"/>
                            <Setter Property="Visibility" TargetName="border1" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource CommonMouseOverBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
    </Style>


   <Style x:Key="NavigationPanePageMinimizedButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{StaticResource DarkApplicationBackgroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="{x:Null}" x:Name="grid" SnapsToDevicePixels="True" MinWidth="30">
                        <Border BorderBrush="{StaticResource NavigationPanePageButtonBackground}" BorderThickness="0,0,0,0" x:Name="border" Background="{StaticResource DarkApplicationBackgroundBrush}" Margin="0,0,0,0">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Width="Auto" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="contentPresenter"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource NavigationPanePageButtonPressedBackground}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="0,0,0,0"/>
                            <Setter Property="Margin" TargetName="border" Value="0,0,0,0"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource NavigationPanePageButtonPressedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource CommonMouseOverBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
    </Style>

    <!-- NavigationPane menu button style -->
    <Style x:Key="NavigationPaneMenuButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter1">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFAFAFAF"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFFFFFFF"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseEnter_Copy1">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFFFFFFF"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FFAFAFAF"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="grid" SnapsToDevicePixels="true" 
                            Background="#00FDF63A" 
                            BorderBrush="{StaticResource AquamarineSkinMainWindowBorder}" 
                            BorderThickness="0,0,1,0">
                		<Path Fill="{x:Null}" Stretch="Fill" 
                              Stroke="#FFAFAFAF" 
                              Data="M119.66667,15.687668 L127.5,23.5 C127.5,23.5 135.27083,15.729167 135.27083,15.729167" 
                              StrokeThickness="2" 
                              Width="8" 
                              Height="6" 
                              x:Name="path"/>
                	</Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="path" Property="Opacity" Value="0.3"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource OnMouseEnter_Copy1}" x:Name="OnMouseEnter_Copy1_BeginStoryboard"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Navigation pane grid splitter style -->

    <Style x:Key="NavigationPaneGridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="PreviewStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Fill="#80000000"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border BorderBrush="{StaticResource AquamarineSkinMainWindowBorder}" 
                            Height="Auto" Background="{StaticResource NavigationPanePageButtonBackground}" BorderThickness="0,0,1,0">
                        <StackPanel Height="6" HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" 
                                    Orientation="Horizontal" Margin="0,0,0,1">
                            <Rectangle Stroke="#00B5E695" Width="6" Height="6" StrokeThickness="3" Fill="{StaticResource NavigationPaneGridSplitterGlyphColor}"/>
                            <Rectangle Stroke="#00B5E695" Width="6" Height="6" StrokeThickness="3" Fill="{StaticResource NavigationPaneGridSplitterGlyphColor}"/>
                            <Rectangle Stroke="#00B5E695" Width="6" Height="6" StrokeThickness="3" Fill="{StaticResource NavigationPaneGridSplitterGlyphColor}"/>
                            <Rectangle Stroke="#00B5E695" Width="6" Height="6" StrokeThickness="3" Fill="{StaticResource NavigationPaneGridSplitterGlyphColor}"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.067,0.496" StartPoint="0.817,0.496">
                    <GradientStop Color="#00EFEFEF" Offset="0.004"/>
                    <GradientStop Color="#003CCC42" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- Locked Check box style -->

    <Style x:Key="LockedCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Background="Transparent" 
                          Width="Auto" 
                          Height="Auto" 
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Margin="0">
                        <Image Source="..\Resources\PNG_Icons\LockedStatus16.png"
                               Width="16" 
                               Height="16" 
                               Stretch="None"
                               Margin="1,0,0,0"
                               Visibility="Hidden"
                               x:Name="image"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="image" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- /////////////////////////////////////////////////////////////////////////////////////////////////// -->


    <!-- Route visibility checkBox style -->

    <Style x:Key="VisibilityCheckBoxStyle" TargetType="{x:Type CheckBox}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid HorizontalAlignment="Stretch" 
                              VerticalAlignment="Stretch" 
                              Background="Transparent">
                        <Image HorizontalAlignment="Center" 
                                   VerticalAlignment="Center" 
                                   Width="16" 
                                   Stretch="None"
                                   Height="16" 
                                   Source="..\Resources\PNG_Icons\VisibleStatus16.png" 
                                   Margin="1,0,0,0"
                                   x:Name="image"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="image" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->

    <!-- Common Text Box Style -->

    <Style x:Key="defaultTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
        <!--<Setter Property="Foreground" Value="#FF141515"/>-->
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FontSize" Value="{StaticResource MiddleFontSize}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{StaticResource AquamarineSkinLightBlueColor}" 
                            BorderThickness="1">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style BasedOn="{StaticResource defaultTextBoxStyle}" TargetType="{x:Type TextBox}"/>


    <Style x:Key="controlsTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="{StaticResource MiddleFontSize}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{x:Null}" 
                            BorderThickness="0">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- /////////////////////////////////////// -->

    <Style x:Key="controlsTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="{StaticResource MiddleFontSize}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Common Password Box Style -->

    <Style x:Key="passwordBoxWithValidationStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
        <!--<Setter Property="Foreground" Value="#FF141515"/>-->
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FontSize" Value="{StaticResource MiddleFontSize}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="topLevelBorder" 
                           BorderBrush="{StaticResource AquamarineSkinLightBlueColor}" 
                           BorderThickness="1">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost" 
                                      SnapsToDevicePixels="True"/>
                            <Image Grid.Column="1" x:Name="CellErrorGlyph" 
                           Source="/ESRI.ArcLogistics.App;component/Resources/PNG_Icons/IncompleteB16.png"
                           Width="15"
                           Height="16"
                           Visibility="Collapsed"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"                       
                           Stretch="None"
                           Margin="0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            <Setter TargetName="topLevelBorder" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                        </Trigger>

                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter TargetName="CellErrorGlyph" Property="Visibility"
                        Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="False">
                            <Setter TargetName="CellErrorGlyph" Property="Visibility"
                        Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource passwordBoxWithValidationStyle}" TargetType="{x:Type PasswordBox}"/>

    <!-- /////////////////////////////////////// -->

    <!--- Text Box in error style -->

    <Style x:Key="textBoxInErrorStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="FontSize" Value="{StaticResource MiddleFontSize}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="topLevelBorder" 
                            BorderBrush="{StaticResource AquamarineSkinLightBlueColor}" 
                            SnapsToDevicePixels="True"
                            BorderThickness="1">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="22"/>
                            </Grid.ColumnDefinitions>
                            <ScrollViewer Grid.Column="0" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Background="{TemplateBinding Background}"
                                              Foreground="{TemplateBinding Foreground}"
                                              BorderBrush="Transparent"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                                  x:Name="PART_ContentHost" 
                                                  Height="Auto" 
                                                  HorizontalAlignment="Stretch" 
                                                  Width="Auto"/>
                            <Image Grid.Column="1" x:Name="CellErrorGlyph" 
                           Source="/ESRI.ArcLogistics.App;component/Resources/PNG_Icons/IncompleteB16.png"
                           Width="15"
                           Height="15"
                           Visibility="Collapsed"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right"                       
                           Stretch="None"
                           Margin="0,0,4,0"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="topLevelBorder" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>

                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter TargetName="CellErrorGlyph" Property="Visibility"
                        Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="False">
                            <Setter TargetName="CellErrorGlyph" Property="Visibility"
                        Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- ////////////////////////////////////////////// -->
    <!--                  Menu styles                   -->
    <!-- ////////////////////////////////////////////// -->


    <!-- SimpleStyles: ContextMenu -->

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Background="Transparent">
                        <Microsoft_Windows_Themes:SystemDropShadowChrome Margin="3,3,0,0" 
                                 CornerRadius="2" Color="{StaticResource TransparentDropDownShadowColor}">
                            <Border SnapsToDevicePixels="True"
            Name="Border"
            Background="White" Margin="-3,-3,3,3"
            BorderBrush="{StaticResource AquamarineSkinLightBlueColor}"
            BorderThickness="1" Opacity="1">
                       
                            <ScrollViewer Background="{TemplateBinding Background}" 
                                      Style="{DynamicResource MenuScrollViewer}"
                                      CanContentScroll="True" 
                                      SnapsToDevicePixels="True"
                                      MaxHeight="400">
                                <StackPanel IsItemsHost="True" 
                                    SnapsToDevicePixels="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"/>
                            </ScrollViewer>
                    </Border>

                        </Microsoft_Windows_Themes:SystemDropShadowChrome>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0,0,0,0"/>
                            <Setter TargetName="Border" Property="CornerRadius" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <Style x:Key="MenuScrollButton"
       TargetType="{x:Type RepeatButton}"
       BasedOn="{x:Null}">
        <Setter Property="ClickMode"
            Value="Hover"/>
        <Setter Property="MinWidth"
            Value="0"/>
        <Setter Property="MinHeight"
            Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel Background="Transparent"
                     SnapsToDevicePixels="true" x:Name="dockPanel">
                        <ContentPresenter x:Name="ContentContainer"
                    		Margin="2,2,2,2"
                    		VerticalAlignment="Center"
                    		HorizontalAlignment="Center"/>
                        <!--right -->
                        <!--bottom-->
                        <!--left  -->
                        <!--top   -->
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                     Value="true">
                            <Setter TargetName="ContentContainer"
                      Property="Margin"
                      Value="3,3,1,1"/>
                            <Setter Property="Background" TargetName="dockPanel" Value="{StaticResource MenuScrollButtonBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MenuScrollViewer"
         TargetType="{x:Type ScrollViewer}"
         BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility"
            Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility"
            Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <!--<SnippetMenuScrollViewer>-->
                <!--ScrollViewer for a MenuItem-->
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1"
                    Grid.Column="0" BorderThickness="0,0,0,0" BorderBrush="{StaticResource AquamarineSkinLightBlueColor}">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton
                          Style="{StaticResource MenuScrollButton}"
                          Grid.Row="0"
                          Grid.Column="0"
                          Command="{x:Static ScrollBar.LineUpCommand}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                          Focusable="False" Height="15" BorderThickness="0,0,0,1" BorderBrush="{StaticResource SelectionObjectBorderBrush}">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{StaticResource {x:Static SystemColors.MenuTextBrushKey}}"
                    Data="{StaticResource UpArrow}"/>
                        </RepeatButton>
                        <RepeatButton
                          Style="{StaticResource MenuScrollButton}"
                          Grid.Row="2"
                          Grid.Column="0"
                          Command="{x:Static ScrollBar.LineDownCommand}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                          Focusable="False" Height="15" BorderThickness="0,1,0,0" BorderBrush="{StaticResource SelectionObjectBorderBrush}">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                           Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{StaticResource {x:Static SystemColors.MenuTextBrushKey}}"
                    Data="{StaticResource DownArrow}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
                <!--</SnippetMenuScrollViewer>-->
            </Setter.Value>
        </Setter>
        <Setter Property="MaxHeight" Value="Infinity"/>
    </Style>

    <!-- Menu Separator style -->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Margin" Value="0,4,0,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border SnapsToDevicePixels="True"
                            BorderBrush="{StaticResource AquamarineSkinLightBlueColor}" 
                            Background="{StaticResource AquamarineSkinLightBlueColor}"
                            Opacity="1"
                            BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader Menu header style -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" BorderThickness="1,1,1,1" >
            <Grid Margin="1,1,1,1" VerticalAlignment="Center">
                <ContentPresenter 
          Margin="4,0,4,0" 
          ContentSource="Header"
                    x:Name="menuContent"
          RecognizesAccessKey="True" VerticalAlignment="Center" />
                <Popup 
          Name="Popup"
          Placement="Bottom"
          IsOpen="{TemplateBinding IsSubmenuOpen}"
          AllowsTransparency="True" 
          Focusable="False"
          PopupAnimation="Scroll">
                    <Microsoft_Windows_Themes:SystemDropShadowChrome 
                                 CornerRadius="4" Color="{StaticResource DropDownShadowColor}">
                        <Border 
            Name="SubmenuBorder"
            SnapsToDevicePixels="True"
            Background="{StaticResource WindowBackgroundBrush}"
            BorderBrush="{StaticResource SolidBorderBrush}"
            BorderThickness="1" >
                            <ScrollViewer CanContentScroll="True" 
              Style="{DynamicResource MenuScrollViewer}">
                                <StackPanel   
              IsItemsHost="True" 
              KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Microsoft_Windows_Themes:SystemDropShadowChrome>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectionObjectBackgroundBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SelectionObjectBorderBrush}"/>
                <Setter Property="BorderThickness" TargetName="Border" Value="1,1,1,1"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,0,0"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,0"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                <Setter Property="Opacity" TargetName="menuContent" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- TopLevelMenuItem style -->
    <ControlTemplate 
    x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
    TargetType="{x:Type MenuItem}">
        <Border Name="Border" Margin="1" BorderThickness="1,1,1,1" >
            <Grid Margin="1,1,1,1" VerticalAlignment="Center">
                <ContentPresenter 
          Margin="4,0,4,0" 
          ContentSource="Header"
                    x:Name="menuContent"
          RecognizesAccessKey="True" VerticalAlignment="Center" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectionObjectBackgroundBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SelectionObjectBorderBrush}"/>
                <Setter Property="BorderThickness" TargetName="Border" Value="1,1,1,1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                <Setter Property="Opacity" TargetName="menuContent" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem template -->
    <ControlTemplate 
    x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
    TargetType="{x:Type MenuItem}">
        <Border Name="Border" Margin="0" BorderThickness="1,1,1,1" Height="22" >
            <Grid Margin="1,1,1,1" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
          Name="Icon"
          Margin="4,0,4,0"
          VerticalAlignment="Center"
          ContentSource="Icon"/>
                <Border 
          Name="Check"  
          Width="13" Height="13" 
          Visibility="Collapsed"
          Margin="4,0,4,0" 
          Background="{StaticResource NormalBrush}"
          BorderThickness="1"
          BorderBrush="{StaticResource NormalBorderBrush}">
                    <Path 
            Name="CheckMark"
            Width="7" Height="7" 
            Visibility="Hidden" 
            SnapsToDevicePixels="False" 
            Stroke="{StaticResource GlyphBrush}"
            StrokeThickness="2"
            Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                </Border>
                <ContentPresenter 
          Name="HeaderHost"
          Grid.Column="1"
          ContentSource="Header"
          RecognizesAccessKey="True" VerticalAlignment="Center"/>
                <TextBlock x:Name="InputGestureText"
          Grid.Column="2"
          Text="{TemplateBinding InputGestureText}"
          Margin="4,1,0,1"
          DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource SelectionObjectBackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource SelectionObjectBorderBrush}"/>
                <Setter Property="BorderThickness" TargetName="Border" Value="1,1,1,1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                <Setter Property="Opacity" TargetName="HeaderHost" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader template -->
    <ControlTemplate 
    x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
    TargetType="{x:Type MenuItem}">
        <Border Name="Border" Margin="1" BorderThickness="1,1,1,1" >
            <Grid Margin="1,1,1,1" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
          Name="Icon"
          Margin="4,0,4,0"
          VerticalAlignment="Center"
          ContentSource="Icon"/>
                <ContentPresenter 
          Name="HeaderHost"
          Grid.Column="1"
          ContentSource="Header"
          RecognizesAccessKey="True" VerticalAlignment="Center"/>
                <TextBlock x:Name="InputGestureText"
          Grid.Column="2"
          Text="{TemplateBinding InputGestureText}"
          Margin="5,2,2,2"
          DockPanel.Dock="Right"/>
                <Path 
          Grid.Column="3"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="M 0 0 L 0 7 L 4 3.5 Z" 
          Fill="{StaticResource GlyphBrush}" />
                <Popup 
          Name="Popup"
          Placement="Bottom"
          IsOpen="{TemplateBinding IsSubmenuOpen}"
          AllowsTransparency="True" 
          Focusable="False"
          PopupAnimation="Scroll">
                    <Microsoft_Windows_Themes:SystemDropShadowChrome 
                                 CornerRadius="4" Color="{StaticResource DropDownShadowColor}">
                        <Border 
            Name="SubmenuBorder"
            SnapsToDevicePixels="True"
            Background="{StaticResource WindowBackgroundBrush}"
            BorderBrush="{StaticResource SolidBorderBrush}"
            BorderThickness="1" >
                            <ScrollViewer CanContentScroll="True" 
              Style="{DynamicResource MenuScrollViewer}">
                                <StackPanel  
              IsItemsHost="True" 
              KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Microsoft_Windows_Themes:SystemDropShadowChrome>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource SelectionObjectBackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource SelectionObjectBorderBrush}"/>
                <Setter Property="BorderThickness" TargetName="Border" Value="1,1,1,1"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                <Setter Property="Opacity" TargetName="HeaderHost" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Foreground" Value="{StaticResource BlackForegroundBrush}"/>
        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="FontSize" Value="14"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <converters:RouteNameConverter x:Key="routeNameConverter"/>

    <!-- Combo box item header templete -->
    <DataTemplate x:Key="ListViewComboBoxItemHeaderTemplate">
        <controls:BindableTextBlock BindableInlines="{Binding Converter={StaticResource routeNameConverter}}"/>
    </DataTemplate>

    <!-- Highlighted menu item template. -->
    <ControlTemplate 
    x:Key="HighlightedListViewComboBoxItem" 
    TargetType="{x:Type MenuItem}">
        <Border Name="Border" Margin="1" BorderThickness="1,1,1,1" 
                Background="{StaticResource SelectionObjectBackgroundBrush}"
                BorderBrush="{StaticResource SelectionObjectBorderBrush}">
            <Grid Margin="6,0,0,0" VerticalAlignment="Center">
                <ContentPresenter 
                      Name="HeaderHost"
                      ContentSource="Header"
                      RecognizesAccessKey="True" VerticalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="HeaderHost" Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- List view combo box item style -->
    <Style x:Key="ListViewComboBoxItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Foreground" Value="{StaticResource BlackForegroundBrush}"/>
        <Setter Property="HeaderTemplate" Value="{StaticResource ListViewComboBoxItemHeaderTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Name="Border" Margin="1" BorderThickness="1,1,1,1" >
                        <Grid Margin="6,0,0,0" VerticalAlignment="Center">
                           <ContentPresenter 
                                  Name="HeaderHost"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource SelectionObjectBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource SelectionObjectBorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="Border" Value="1,1,1,1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="HeaderHost" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!-- Highlighted menu item style -->
    <Style x:Key="ListViewComboBoxHighlightedItemStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource ListViewComboBoxItemStyle}">
        <Setter Property="Template" Value="{StaticResource HighlightedListViewComboBoxItem}"/>
    </Style>
 

    <!-- Map Context Menu Item control template -->

    <converters:MapContextMenuIconColorConverter x:Key="mapContextMenuIconColorConverter"/>

    <ControlTemplate x:Key="MapContextMenuItemTemplate" TargetType="{x:Type MenuItem}">
        <Border Name="Border" Margin="1" BorderThickness="1,1,1,1" >
            <Grid Margin="1,1,1,1" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="16" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Margin="0,0,1,0"
          Name="HeaderHost"
          Grid.Column="0"
          ContentSource="Header"
          RecognizesAccessKey="True" VerticalAlignment="Center"/>
                <ContentControl Grid.Column="1" VerticalAlignment="Stretch" 
                                HorizontalAlignment="Stretch"
                                Width="16" 
                                Height="16" 
                                Background="Transparent"
                                Content="{Binding Converter={StaticResource mapContextMenuIconColorConverter}}"/>
                <!--<Rectangle Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                               Width="16" Height="16" Fill="HotPink"/>-->
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource SelectionObjectBackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource SelectionObjectBorderBrush}"/>
                <Setter Property="BorderThickness" TargetName="Border" Value="1,1,1,1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!-- Menu style -->

    <Style TargetType="{x:Type Menu}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border SnapsToDevicePixels="True"
            Name="Border"
            Background="{StaticResource WindowBackgroundBrush}"
            BorderBrush="{StaticResource AquamarineSkinLightBlueColor}"
            BorderThickness="1" Opacity="1">
                        <ScrollViewer Background="{TemplateBinding Background}" 
                                      Style="{DynamicResource MenuScrollViewer}"
                                      CanContentScroll="True" 
                                      SnapsToDevicePixels="True"
                                      MaxHeight="400">
                            <StackPanel IsItemsHost="True" 
                                    SnapsToDevicePixels="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- ////////////////////////////////////// -->
    <!-- Default TextBlock style -->
    <!-- ////////////////////////////////////// -->

    <Style x:Key="DefaultTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultTextBlockStyle}"/>
        
    <!-- ////////////////////////////////////// -->
    <!-- Default BindableTextBlock style -->
    <!-- ////////////////////////////////////// -->

    <Style TargetType="{x:Type controls:BindableTextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ////////////////////////////////////////////// -->
    <!-- Default hyperlink style -->
    <!-- ////////////////////////////////////////////// -->

    <Style TargetType="{x:Type Hyperlink}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="ForceCursor" Value="False"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{StaticResource AquamarineSkinLightBlueColor}"/>
        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextBlock.TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Document reader style -->

    <Style TargetType="{x:Type FlowDocumentReader}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type FlowDocumentReader}">
                    <DockPanel Language="en-us"
						Uid="DockPanel_3" 
						LastChildFill="True" 
						ScrollViewer.VerticalScrollBarVisibility="Hidden" 
						ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                        <Grid Uid="Grid_33" 
							ScrollViewer.VerticalScrollBarVisibility="Hidden" 
							ScrollViewer.HorizontalScrollBarVisibility="Hidden" Margin="0,0,0,0">
                            <Border
								x:Name="PART_ContentHost" 
								Uid="Border_59" 
								KeyboardNavigation.IsTabStop="False" 
								KeyboardNavigation.TabIndex="1" 
								KeyboardNavigation.TabNavigation="Local" 
								BorderBrush="{TemplateBinding BorderBrush}" 
								BorderThickness="{TemplateBinding BorderThickness}" 
								ScrollViewer.VerticalScrollBarVisibility="Hidden" 
								ScrollViewer.HorizontalScrollBarVisibility="Hidden" Margin="0,0,-22,0"/>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ViewingMode" Value="Page"/>
                        <Trigger Property="ViewingMode" Value="TwoPage"/>
                        <Trigger Property="ViewingMode" Value="Scroll">
                        </Trigger>
                        <Trigger Property="Document" Value="{x:Null}"/>
                        <Trigger Property="IsFindEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="FontSize" Value="{StaticResource MiddleFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
    </Style>

    <Style x:Key="LicenseFormBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="BorderBrush" Value="{StaticResource AquamarineSkinMainWindowBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="LicenseViewLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource AquamarineSkinLightBlueColor}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ForceCursor" Value="False"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Style.Triggers>
            <Trigger Property="Content" Value="">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="LicenseViewHeaderStyle"
        TargetType="{x:Type Label}"
        BasedOn="{StaticResource LicenseViewLabelStyle}">
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="LicenseViewFlowDocumentStyle" TargetType="{x:Type FlowDocument}">
        <Setter Property="Foreground" Value="{StaticResource LicensePageForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}" />
        <Setter Property="FontSize" Value="{StaticResource MiddleFontSize}" />
        <Setter Property="PagePadding" Value="14,4,Auto,0" />
    </Style>

    <Style
        x:Key="LicenseInformationGridColumnStyle"
        TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="*" />
        <Setter
            Property="controls:GridManager.ColumnSource"
            Value="{Binding
                RelativeSource={x:Static RelativeSource.Self},
                Path=(controls:PropertyManager.ReceiverProperty)}" />
        <Style.Triggers>
            <Trigger Property="controls:GridManager.ColumnSource" Value="{x:Null}">
                <Setter Property="Width" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->
    <!-- Preferences page styles -->
    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->
    <Style x:Key="PreferencesTitleLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="{StaticResource MiddleFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}" />
        <Setter Property="Foreground" Value="#FFFDFDFD" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <!--//////////////////////////////////////////////////////////////////////////////////////////////-->

    <!-- Page button style -->

    <Style TargetType="{x:Type Button}" x:Key="PageButtonStyle">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseDown">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="pressed_border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseUp">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="pressed_border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Width="Auto" Height="Auto">
                        <Border BorderThickness="1,1,1,1" 
                                BorderBrush="{StaticResource ButtonBorderColor}" 
                                CornerRadius="6,6,6,6" x:Name="border" 
                                Background="{StaticResource AquamarineSkinButtonBackground}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              RecognizesAccessKey="True" 
                                              Margin="3,0,3,0" 
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" 
                                              Content="{TemplateBinding Content}"/>
                        </Border>
                        <Border BorderThickness="1,1,1,1" BorderBrush="{StaticResource ButtonBorderColor}" CornerRadius="6,6,6,6" x:Name="pressed_border" Background="{StaticResource ButtonPressedBrush}" Visibility="Collapsed">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="3,0,3,0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource CommonMouseOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MouseUp}" x:Name="MouseUp_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MouseDown}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DisabledButtonBackground}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource CommonMouseOverBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Margin" Value="4,0,0,0"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MinWidth" Value="60"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource PageButtonStyle}">
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="5"/>
    </Style>


    <Style x:Key="PrintButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource PageButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseDown">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="pressed_border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseUp">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="pressed_border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Width="Auto" Height="Auto">
                        <Border BorderThickness="1,1,1,1" 
                                BorderBrush="{StaticResource ButtonBorderColor}" 
                                CornerRadius="6,6,6,6" 
                                x:Name="border" 
                                xcdg:TableView.VerticalGridLineBrush="#FF000000" 
                                Background="{StaticResource AquamarineSkinButtonBackground}">
                            <Image Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1,1,1,1" Source="..\Resources\print_16.png" Stretch="Fill"/>
                        </Border>
                        <Border BorderThickness="1,1,1,1" BorderBrush="{StaticResource ButtonBorderColor}" CornerRadius="6,6,6,6" x:Name="pressed_border" xcdg:TableView.VerticalGridLineBrush="#FF000000" Background="{StaticResource ButtonPressedBrush}" Visibility="Collapsed">
                            <Image Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1,1,1,1" Source="..\Resources\print_16.png" Stretch="Fill"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                		<Trigger Property="IsEnabled" Value="False">
                			<Setter Property="Background" TargetName="border" Value="{StaticResource DisabledButtonBackground}"/>
                		</Trigger>
                		<Trigger Property="IsMouseOver" Value="True">
                			<Setter Property="Background" TargetName="border" Value="{StaticResource CommonMouseOverBackground}"/>
                		</Trigger>
                		<Trigger Property="IsPressed" Value="True">
                			<Trigger.ExitActions>
                				<BeginStoryboard Storyboard="{StaticResource MouseUp}" x:Name="MouseUp_BeginStoryboard"/>
                			</Trigger.ExitActions>
                			<Trigger.EnterActions>
                				<BeginStoryboard Storyboard="{StaticResource MouseDown}"/>
                			</Trigger.EnterActions>
                		</Trigger>
                	</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
    </Style>

    <Style
        x:Key="LicenseViewCommandButtonStyle"
        TargetType="{x:Type Button}"
        BasedOn="{StaticResource PageButtonStyle}">
        <Style.Triggers>
            <Trigger Property="Command" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Proress bar style -->
    <Style x:Key="{x:Type ProgressBar}"
     TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid Height="Auto" Width="Auto">
                        <Border 
                            Name="PART_Track" 
                            CornerRadius="2" 
                            HorizontalAlignment="Stretch"
                            BorderThickness="1" 
                            BorderBrush="{StaticResource AquamarineSkinMainWindowBorder}"
                            Background="{StaticResource LightBrush}" />
                        <Border 
                            Name="PART_Indicator" 
                            CornerRadius="3,3,3,3" 
                            BorderThickness="2,2,2,2" 
                            HorizontalAlignment="Left" 
                            Background="{StaticResource AquamarineStyleHeaderBrush}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Scale bar style -->
    <Style x:Key="ScaleBarTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#FFF9F9F9"/>
        <Setter Property="BitmapEffect">
            <Setter.Value>
                <OuterGlowBitmapEffect GlowColor="#FF313131" GlowSize="4" Opacity="0.75"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type esri:ScaleBar}" x:Key="ScaleBarStyleKey">
        <Setter Property="FillColor1" Value="White"/>
        <Setter Property="FillColor2" Value="Black"/>
        <Setter Property="TextColor" Value="White"/>
        <Setter Property="TargetWidth" Value="150.0"/>
        <Setter Property="FontSize" Value="10.0"/>
        <Setter Property="BarHeight" Value="10.0"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="esri:ScaleBar">
                    <StackPanel Orientation="Horizontal">
                        <Grid Height="{TemplateBinding BarHeight}" x:Name="ScaleBarBlock" 
                              VerticalAlignment="Center" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="5*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Rectangle Grid.Column="0" Grid.Row="0" Fill="{TemplateBinding FillColor2}"/>
                            <Rectangle Grid.Column="1" Grid.Row="0" Fill="{TemplateBinding FillColor1}"/>
                            <Rectangle Grid.Column="2" Grid.Row="0" Fill="{TemplateBinding FillColor2}"/>
                            <Rectangle Grid.Column="3" Grid.Row="0" Fill="{TemplateBinding FillColor1}"/>
                            <Rectangle Grid.Column="4" Grid.Row="0" Fill="{TemplateBinding FillColor2}"/>
                            <Rectangle Grid.Column="0" Grid.Row="1" Fill="{TemplateBinding FillColor1}"/>
                            <Rectangle Grid.Column="1" Grid.Row="1" Fill="{TemplateBinding FillColor2}"/>
                            <Rectangle Grid.Column="2" Grid.Row="1" Fill="{TemplateBinding FillColor1}"/>
                            <Rectangle Grid.Column="3" Grid.Row="1" Fill="{TemplateBinding FillColor2}"/>
                            <Rectangle Grid.Column="4" Grid.Row="1" Fill="{TemplateBinding FillColor1}"/>
                        </Grid>
                        <TextBlock Name="ScaleBarValue"
                                   Focusable="False"
                                   Background="Transparent"
                                   Style="{StaticResource ScaleBarTextBlockStyle}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Drag and drop adornments styles-->
    <Style x:Key="AdornmentTimeWindowTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" CornerRadius="2,2,2,2" BorderThickness="1,1,1,1" BorderBrush="#FF454545" Background="#FFFDFDFD" Margin="2,2,2,2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Text}" Margin="3,3,3,3"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="AdornmentMultipleSelectionTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" BorderBrush="#FF333333" Background="#FFA5A5A5" Margin="2,2,2,2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Text}" Margin="3,3,3,3" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default check box style -->

    <Style TargetType="{x:Type CheckBox}" x:Key="DefaultCheckBoxStyle">
        <Style.Triggers>
        <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="{StaticResource DropShadowBrush}"/>
        </Trigger>
    </Style.Triggers>
    <Setter Property="Foreground" Value="{StaticResource LightBrush}"/>
    <Setter Property="Background" Value="{StaticResource CheckRadioFillNormal}"/>
    <Setter Property="BorderBrush" Value="{StaticResource CheckRadioStrokeNormal}"/>
    <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
        <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <systemControls:BulletDecorator SnapsToDevicePixels="true" 
                                                    Background="Transparent" 
                                                    HorizontalAlignment="Left" 
                                                    VerticalAlignment="Top"
                                                    FocusVisualStyle="{x:Null}">
                        <systemControls:BulletDecorator.Bullet>
                            <Grid Width="18" Height="18" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Rectangle Stroke="#FF212020" 
                                           Width="15" Height="15" 
                                           VerticalAlignment="Stretch" x:Name="rectangle" StrokeThickness="0.5" RadiusX="3" RadiusY="3">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                            <GradientStop Color="#FFD2D2D3" Offset="0.888"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Grid Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Visible" x:Name="grid" RenderTransformOrigin="0.5,0.5" Opacity="0.3" Width="13" Height="13">
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <!-- Layer 1/<Path> -->

                                    <!-- Layer 1/<Path> -->
                                    <Path Data="M4.3041628,11.793292 C4.1646176,11.793292 4.0320848,11.736628 3.9339123,11.635651 L0.65985944,8.2648934 C0.46842306,8.0665709 0.45299596,7.748383 0.62549906,7.5326255 L1.7453668,6.1203944 C1.8379294,6.0048879 1.972566,5.9329687 2.1170198,5.9220718 2.129642,5.9213454 2.1408617,5.9213454 2.1534839,5.9213454 2.2860168,5.9213454 2.4129398,5.9743767 2.5097098,6.0680896 L4.277516,7.7672709 8.4337189,3.1143182 C8.4512497,3.093251 10.298996,1.04755 11.197976,1.04755 11.3824,1.04755 11.553501,1.1180163 11.676216,1.2458726 12.389369,1.9832257 10.787755,4.04055 10.278661,4.6544056 L4.7101762,11.597149 C4.6148087,11.714834 4.4773672,11.786027 4.3308097,11.791839 4.3209924,11.791839 4.3125776,11.793292 4.3041628,11.793292 L4.3041628,11.793292 z" x:Name="path" Fill="#FF8D8D8D" Margin="0,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" Width="13" Height="13">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>

                                    <!-- Layer 1/<Path> -->
                                    <Path Fill="#FFC0C0C0" Data="M2.1531947,6.4695327 L1.0320461,7.8832212 4.3070911,11.254269 9.8854721,4.3021193 C10.431313,3.6421558 11.583332,1.9152026 11.310411,1.632465 11.037491,1.3490004 9.5522145,2.6689276 8.823959,3.48516 L4.3070911,8.542458 2.1531947,6.4695327 z" x:Name="path2" Margin="0,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" Width="13" Height="13">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>

                                    <!-- Layer 1/<Path> -->

                                    <!-- Layer 1/<Path> -->

                                </Grid>
                            </Grid>
                        </systemControls:BulletDecorator.Bullet>
                        <Grid Width="Auto" Height="Auto" 
                              VerticalAlignment="Center" 
                              FocusVisualStyle="{x:Null}"
                              HorizontalAlignment="Left">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="1,0,1,1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" d:LayoutOverrides="Width, Height" x:Name="contentPresenter"/>
                            <Border BorderThickness="0,0,0,1" VerticalAlignment="Bottom" 
                                    Height="1" 
                                    BorderBrush="{TemplateBinding Foreground}" 
                                    Width="{Binding Path=ActualWidth, ElementName=contentPresenter, Mode=Default}" 
                                    Visibility="Hidden" 
                                    SnapsToDevicePixels="True"
                                    x:Name="border"/>
                        </Grid>
                    </systemControls:BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="path2" Value="#FF119104"/>
                            <Setter Property="Fill" TargetName="path" Value="#FF084602"/>
                            <Setter Property="Opacity" TargetName="grid" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.729,0.713" StartPoint="0.138,0.155">
                                        <GradientStop Color="#FFA7FF9E" Offset="0"/>
                                        <GradientStop Color="#FFF0FFE9" Offset="0.888"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="rectangle" Property="Stroke" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFC5C5C5" Offset="0"/>
                                        <GradientStop Color="#FFC0C0C0" Offset="0.79"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Opacity" TargetName="grid" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
    </Setter>
    </Style>


    <!-- Check box in Views widget style -->
    <Style TargetType="{x:Type CheckBox}" x:Key="CheckBoxInViewsWidgetStyle" BasedOn="{StaticResource DefaultCheckBoxStyle}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DropShadowBrush}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="{StaticResource AquamarineSkinWidgetForeground}"/>
        <Setter Property="Background" Value="{StaticResource CheckRadioFillNormal}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckRadioStrokeNormal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="{StaticResource StandartHelpFontSize}"/>
    </Style>

    <!-- Check box in grid style -->

    <Style TargetType="{x:Type CheckBox}" x:Key="CheckBoxInGridStyle" BasedOn="{StaticResource DefaultCheckBoxStyle}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="{StaticResource ForegroungCheckBoxInGridBrush}"/>
        <Setter Property="Background" Value="{StaticResource CheckRadioFillNormal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckRadioStrokeNormal}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <!-- Check box in Relation Object Collection Editor style -->

    <Style TargetType="{x:Type CheckBox}" x:Key="CheckBoxInRelationObjectCollectionEditorStyle" BasedOn="{StaticResource DefaultCheckBoxStyle}">
        <Setter Property="Foreground" Value="{StaticResource ForegroungCheckBoxInGridBrush}"/>
        <Setter Property="Background" Value="{StaticResource CheckRadioFillNormal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckRadioStrokeNormal}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>


    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource DefaultCheckBoxStyle}"/>

    <!-- Check box in map layers widget style -->

    <Style TargetType="{x:Type CheckBox}" x:Key="CheckBoxInMapLAyersWidgetStyle" BasedOn="{StaticResource DefaultCheckBoxStyle}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="{StaticResource LightBrush}"/>
        <Setter Property="Background" Value="{StaticResource CheckRadioFillNormal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckRadioStrokeNormal}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="{StaticResource MiddleFontSize}"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <!-- Docking position hovered button style -->

    <ControlTemplate x:Key="HoveredGlassButton" TargetType="{x:Type Button}">
        <Border BorderBrush="#FF5373A0" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" SnapsToDevicePixels="True">
            <Border.BitmapEffect>
                <OuterGlowBitmapEffect GlowColor="#FF5373A0"/>
            </Border.BitmapEffect>
            <Border x:Name="border" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0,0,0,0" CornerRadius="3,3,3,3">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.507*"/>
                        <RowDefinition Height="0.493*"/>
                    </Grid.RowDefinitions>
                    <Border Opacity="1" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="4,4,4,4">
                        <Border.Background>
                            <RadialGradientBrush>
                                <RadialGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.606" ScaleY="2.175"/>
                                        <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                        <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                        <TranslateTransform X="0.001" Y="0.024"/>
                                    </TransformGroup>
                                </RadialGradientBrush.RelativeTransform>
                                <GradientStop Color="#CC8DBDFF" Offset="0.254"/>
                                <GradientStop Color="#4C8DBDFF" Offset="1"/>
                            </RadialGradientBrush>
                        </Border.Background>
                    </Border>
                    <Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" CornerRadius="4,4,0,0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                                <GradientStop Color="#B2FFFFFF" Offset="0.004"/>
                                <GradientStop Color="#33FFFFFF" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Grid.RowSpan="2" Content="{TemplateBinding Content}" RenderTransformOrigin="0.5,0.5">
                        <ContentPresenter.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </ContentPresenter.RenderTransform>
                    </ContentPresenter>
                </Grid>
            </Border>
        </Border>
    </ControlTemplate>


    <!-- Docking position button style -->
    <ControlTemplate x:Key="GlassButton" TargetType="{x:Type Button}">
        <Border BorderBrush="#FF858585" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" SnapsToDevicePixels="True">
            <Border x:Name="border" Background="#D8C7C8C8" BorderBrush="{x:Null}" BorderThickness="0,0,0,0" CornerRadius="3,3,3,3">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.507*"/>
                        <RowDefinition Height="0.493*"/>
                    </Grid.RowDefinitions>
                    <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="4,4,4,4">
                        <Border.Background>
                            <RadialGradientBrush>
                                <RadialGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.121" ScaleY="1.517"/>
                                        <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                        <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                        <TranslateTransform X="0.428" Y="-0.005"/>
                                    </TransformGroup>
                                </RadialGradientBrush.RelativeTransform>
                                <GradientStop Color="#CC8DBDFF" Offset="0.254"/>
                                <GradientStop Color="#4C8DBDFF" Offset="1"/>
                            </RadialGradientBrush>
                        </Border.Background>
                    </Border>
                    <Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" CornerRadius="4,4,0,0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                                <GradientStop Color="#B2FFFFFF" Offset="0.004"/>
                                <GradientStop Color="#33FFFFFF" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                    <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" 
                                      Width="Auto" 
                                      Grid.RowSpan="2" 
                                      Opacity="0.5"
                                      Content="{TemplateBinding Content}"/>
                </Grid>
            </Border>
        </Border>
    </ControlTemplate>

    <!-- Getting started page button style. -->
    
    <Style x:Key="GettingStartedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="Auto" Height="Auto" Cursor="Hand">
                        <Image MinHeight="{Binding Path=ActualHeight, ElementName=image, Mode=Default}" MinWidth="{Binding Path=ActualWidth, ElementName=image, Mode=Default}" x:Name="image" Width="Auto" Height="Auto" Source="..\Resources\buttonLarge.jpg"/>
                        <ContentPresenter Margin="5,5,5,5" HorizontalAlignment="Center" VerticalAlignment="Top" MaxWidth="130" MaxHeight="168"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Getting started page small button style. -->

    <Style x:Key="GettingStartedSmallButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="{Binding Path=ActualWidth, ElementName=image, Mode=Default}" Height="{Binding Path=ActualHeight, ElementName=image, Mode=Default}" Cursor="Hand">
                        <Image MinHeight="{Binding Path=ActualHeight, ElementName=image, Mode=Default}" MinWidth="{Binding Path=ActualWidth, ElementName=image, Mode=Default}" x:Name="image" Width="Auto" Height="Auto" Source="..\Resources\buttonSmall.jpg"/>
                        <ContentPresenter Margin="5,5,5,5" HorizontalAlignment="Center" VerticalAlignment="Center" MaxWidth="130" MaxHeight="80"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Getting started big label style -->
    <Style x:Key="GettingStartedHeaderStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#FF006B8A"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="1,1,1,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="Verdana"/>
    </Style>


    <!--////////////////////////////////-->

    <!-- BREAK EDITOR TEMPLATES-->
    <DataTemplate x:Key="TimeWindowTemplate" >
        <controls:TimeWindowBreakEditor DataContext="{Binding}" />
    </DataTemplate>

    <DataTemplate x:Key="DriveTimeTemplate" >
        <controls:DriveTimeBreakEditor DataContext="{Binding}" />
    </DataTemplate>

    <DataTemplate x:Key="WorkTimeTemplate" >
        <controls:WorkTimeBreakEditor DataContext="{Binding}" />
    </DataTemplate>

    <!--////////////////////////////////-->

</ResourceDictionary>
