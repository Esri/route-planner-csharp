<!-- File contains calendar styles which cannot be correctly opened in ExpressionBlend 4.0. -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:converters="clr-namespace:ESRI.ArcLogistics.App.Converters"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:xceedControls="clr-namespace:Xceed.Wpf.Controls;assembly=Xceed.Wpf.Controls"
    xmlns:systemControls="clr-namespace:System.Windows.Controls.Primitives;assembly=PresentationFramework"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
    xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
    mc:Ignorable="d" >

    <!--////////////////////-->
    <!--   Calendar Style   -->
    <!--////////////////////-->

    <!-- Common calendar Item style -->
    <Style x:Key="MainCalendarItemStyle" TargetType="CalendarItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarItem">
                    <ControlTemplate.Resources>
                        <!-- Start: Data template for header button -->
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock
                                Foreground="#FF333333"
                                FontWeight="Bold"
                                FontSize="9.5"
                                FontFamily="Verdana"
                                HorizontalAlignment="Center"
                                Margin="0,6,0,6"
                                Text="{Binding}"
                                VerticalAlignment="Center"/>
                        </DataTemplate>
                        <!-- End: Data template for header button -->
                    </ControlTemplate.Resources>

                    <Grid Name="PART_Root" Background="Transparent" 
                          SnapsToDevicePixels="True"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        <Grid VerticalAlignment="Stretch"
                              HorizontalAlignment="Stretch"
                              Background="LightGray"
                              SnapsToDevicePixels="True"
                              Opacity="0.5"
                              Visibility="Hidden"
                              x:Name="lockedGrid"/>
                        <Border 
                                Background="White"
                                Style="{DynamicResource ExpandedControlBorderStyle}"
                                BorderThickness="1" 
                                SnapsToDevicePixels="True"
                                CornerRadius="5">
                            <Grid Margin="0,0,0,0" VerticalAlignment="Stretch"
                                  HorizontalAlignment="Stretch" SnapsToDevicePixels="True">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="46"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="46"/>
                                </Grid.ColumnDefinitions>

                                <Grid.Resources>
                                    <!-- Start: Previous button template -->
                                    <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="Button">
                                        <Grid Cursor="Hand" VerticalAlignment="Stretch"
                                                      HorizontalAlignment="Stretch">
                                            <Border x:Name="backgroundRect" Background="{StaticResource AquamarineSkinCalendarHeaderBackground}" 
                                                           CornerRadius="3,0,0,0" 
                                                           Opacity="1"/>
                                            <Grid VerticalAlignment="Center"
                                                      HorizontalAlignment="Center">
                                                <Path     Height="10" 
                                                          Width="6" 
                                                          VerticalAlignment="Center" 
                                                          HorizontalAlignment="Left" 
                                                          Stretch="Fill"
                                                          Margin="3,0,3,0"
                                                          Fill="{TemplateBinding Foreground}"
                                                          Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"/>
                                            </Grid>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="backgroundRect" Property="Background" Value="{StaticResource AquamarineSkinCalendarHeaderDisabledBackground}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>

                                    <!-- End: Previous button template -->

                                    <!-- Start: Next button template -->
                                    <ControlTemplate x:Key="NextButtonTemplate" TargetType="Button">
                                        <Grid Cursor="Hand">
                                            <Border x:Name="backgroundRect" Background="{StaticResource AquamarineSkinCalendarHeaderBackground}" 
                                                           CornerRadius="0,3,0,0" 
                                                           Opacity="1"/>
                                            <Grid VerticalAlignment="Center"
                                                      HorizontalAlignment="Center">
                                                <Path Margin="3,0,3,0" 
                                                          Height="10" 
                                                          Width="6" 
                                                          VerticalAlignment="Center" 
                                                          HorizontalAlignment="Right" 
                                                          Stretch="Fill" 
                                                          Fill="{TemplateBinding Foreground}"
                                                          Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"/>
                                            </Grid>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="backgroundRect" Property="Background" Value="{StaticResource AquamarineSkinCalendarHeaderDisabledBackground}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>

                                    <!-- End: Next button template -->

                                    <!-- Start: Header button template -->
                                    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="Button">
                                        <Grid Cursor="Hand" x:Name="backgroundRect"
                                            Margin="-1,0,-1,0"
                                            VerticalAlignment="Stretch"
                                            HorizontalAlignment="Stretch" 
                                            Background="{StaticResource AquamarineSkinCalendarHeaderBackground}">
                                            <!-- This Border is new -->
                                            <ContentPresenter
                                                x:Name="buttonContent"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Margin="8,0,8,0"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center">
                                            </ContentPresenter>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="backgroundRect" Property="Background" Value="{StaticResource AquamarineSkinCalendarHeaderDisabledBackground}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                    <!-- End: Header button template -->

                                </Grid.Resources>


                                <!-- Start: Previous button content -->
                                <Button x:Name="PART_PreviousButton" 
                                            Grid.Row="0" Grid.Column="0"
                                            Template="{StaticResource PreviousButtonTemplate}" 
                                            Height="30" Width="Auto" 
                                            HorizontalAlignment="Stretch"  
                                            VerticalAlignment="Stretch"
                                            Focusable="False"
                                            >
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Foreground" Value="{StaticResource AquamarineSkinCalendarHeaderForeground}"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource AquamarineSkinCalendarHeaderForegroundMouseOver}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <!-- End: Previous button content -->

                                <!-- Start: Header button content -->
                                <Button x:Name="PART_HeaderButton"                                             
                                            Grid.Row="0" Grid.Column="1"  
                                            HorizontalAlignment="Stretch" 
                                            VerticalAlignment="Stretch" 
                                            FontWeight="Bold" 
                                            FontSize="{StaticResource StandartHelpFontSize}" 
                                            Focusable="False"
                                            Width="Auto"
                                            MinWidth="120"
                                            Padding="0"
                                            Margin="0,0,-1,0"
                                            Height="30"
                                            Template="{StaticResource HeaderButtonTemplate}"
                                            >
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Foreground" Value="{StaticResource AquamarineSkinCalendarHeaderForeground}"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource AquamarineSkinCalendarHeaderForegroundMouseOver}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <!-- End: Header button content -->

                                <!-- Start: Next button content -->
                                <Button x:Name="PART_NextButton" 
                                            Grid.Row="0" Grid.Column="2" 
                                            Height="30" Width="46"
                                            Margin="0"
                                            HorizontalAlignment="Stretch" 
                                            VerticalAlignment="Stretch"
                                            Template="{StaticResource NextButtonTemplate}" 
                                            Focusable="False"
                                            >
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Foreground" Value="{StaticResource AquamarineSkinCalendarHeaderForeground}"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource AquamarineSkinCalendarHeaderForegroundMouseOver}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <!-- End: Next button content -->

                                <Border Grid.Row="0"
                                            Grid.ColumnSpan="3"
                                            BorderThickness="0,0,0,1"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            VerticalAlignment="Bottom"
                                            HorizontalAlignment="Stretch"
                                            Margin="0"/>

                                <!-- Start: Month Content Grid -->
                                <Grid x:Name="PART_MonthView" Grid.Row="1" 
                                      Grid.ColumnSpan="3" 
                                      Visibility="Visible"
                                      VerticalAlignment="Stretch"
                                      HorizontalAlignment="Stretch"
                                      Margin="6,2,6,6">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                </Grid>
                                <!-- End: Month Content Grid -->

                                <!-- End: Year Content Grid -->
                                <Grid x:Name="PART_YearView" 
                                      Grid.Row="1" 
                                      Grid.ColumnSpan="3" 
                                      Visibility="Hidden" 
                                      HorizontalAlignment="Center"
                                      Margin="6,2,6,6">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                </Grid>
                                <!-- End: Year Content Grid -->
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <DataTrigger Value="Year">
                            <DataTrigger.Binding>
                                <Binding Path="DisplayMode">
                                    <Binding.RelativeSource>
                                        <RelativeSource Mode="FindAncestor" AncestorType="{x:Type Calendar}" />
                                    </Binding.RelativeSource>
                                </Binding>
                            </DataTrigger.Binding>
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Value="Decade">
                            <DataTrigger.Binding>
                                <Binding Path="DisplayMode">
                                    <Binding.RelativeSource>
                                        <RelativeSource Mode="FindAncestor" AncestorType="{x:Type Calendar}" />
                                    </Binding.RelativeSource>
                                </Binding>
                            </DataTrigger.Binding>
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="lockedGrid" Property="Visibility" Value="Visible" />
                        </Trigger>-->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default calendar day button style  -->
    <Style TargetType="CalendarDayButton" x:Key="defaultCalendarDayButtonStyle">
        <Setter Property="FontFamily" Value="{StaticResource DefaultApplicationFont}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">

                    <ControlTemplate.Resources>
                        <converters:RoutedCalendarDayConverter x:Key="routedCalendarDayConverter"/>

                        <Storyboard x:Key="DragEnter">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DragEnterBackground" 

Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="DragLeave">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DragEnterBackground" 

Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid Focusable="False" x:Name="baseGrid" AllowDrop="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">

                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <!--<Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity" To=".35" Duration="0:0:0.1"/>
                                    </Storyboard>-->
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color" To="White"></ColorAnimation>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="bigSelectedText" Storyboard.TargetProperty="Color" To="White"></ColorAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="RegularDay"/>
                                <VisualState x:Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="NormalText2" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color" To="#FFFFFFFF"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                        <Rectangle Focusable="False" 
                                   x:Name="TodayBackground" 
                                   Opacity="0" 
                                   SnapsToDevicePixels="True"
                                   Fill="Transparent"/>

                        <Rectangle Focusable="False" 
                                   x:Name="SelectedBackground" 
                                   StrokeThickness="1"
                                   Opacity="0" 
                                   SnapsToDevicePixels="True"
                                   Stroke="{StaticResource AquamarineSkinTodayBorder}"
                                   Fill="{StaticResource AquamarineSkinTodayBackground}"/>
                        <Rectangle Focusable="False" 
                                   x:Name="BackgroundGrid" 
                                   Opacity="0" 
                                   SnapsToDevicePixels="True"
                                   Fill="{StaticResource AquamarineSkinMouseOverDayBackground}"
                                   Stroke="{StaticResource AquamarineSkinMouseOverDayBorder}"/>

                        <ContentPresenter
                                    Focusable="False"
                                    SnapsToDevicePixels="True"
                                    x:Name="NormalText"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Margin="4,1,4,1"
                                    Opacity="1"
                                    >
                            <TextElement.Foreground>
                                <SolidColorBrush x:Name="selectedText" Color="Black"/>
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <ContentPresenter
                                    SnapsToDevicePixels="True"
                                    Focusable="False"
                                    x:Name="NormalText2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    Margin="4,1,4,1"
                                    Content="{Binding Path=Content, ElementName=NormalText, Mode=OneWay}"
                                    Opacity="0"
                                    >
                            <TextElement.Foreground>
                                <SolidColorBrush x:Name="bigSelectedText" Color="Black"/>
                            </TextElement.Foreground>
                            <TextElement.FontWeight>
                                <FontWeight>
                                    Bold
                                </FontWeight>
                            </TextElement.FontWeight>
                            <TextElement.FontSize>
                                12
                            </TextElement.FontSize>
                        </ContentPresenter>
                        <Rectangle 
                             Focusable="False" 
                             x:Name="DayButtonFocusVisual" 
                             Visibility="Collapsed" 
                             IsHitTestVisible="false" 
                             SnapsToDevicePixels="True"
                             Stroke="#FF45D6FA"/>
                        <Rectangle Focusable="False" 
                                   x:Name="DragEnterBackground" 
                                   Stroke="{StaticResource AquamarineSkinDayDragEnterBorder}" 
                                   StrokeThickness="2" 
                                   Opacity="0" 
                                   SnapsToDevicePixels="True"
                                   Fill="{x:Null}"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="BackgroundGrid" Value="1"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Calendar day button style with routed days support -->
    <Style TargetType="CalendarDayButton" x:Key="calendarDayButtonStyleWuthRoutedDaysSupport">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">

                    <ControlTemplate.Resources>
                        <converters:RoutedCalendarDayConverter x:Key="routedCalendarDayConverter"/>

                        <Storyboard x:Key="DragEnter">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DragEnterBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="DragLeave">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DragEnterBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid Focusable="False" x:Name="baseGrid" AllowDrop="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="bigSelectedText" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Opacity" To="0.3" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="bigSelectedText" Storyboard.TargetProperty="Opacity" To="0.3" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color" To="White"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="bigSelectedText" Storyboard.TargetProperty="Color" To="White"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="RegularDay"/>
                                <VisualState x:Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="NormalText2" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color" To="#FFFFFFFF"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                        <Rectangle Focusable="False" 
                                   x:Name="TodayBackground" 
                                   Opacity="0" 
                                   SnapsToDevicePixels="True"
                                   Fill="Transparent"/>

                        <!-- This element is highlights routed days -->
                        <Rectangle Focusable="False" Margin="1" 
                                   x:Name="RoutedDayBackground" 
                                   IsHitTestVisible="False" 
                                   SnapsToDevicePixels="True"
                                   Visibility="Hidden" 
                                   Stroke="{StaticResource AquamarineSkinBuildRoutesDayBorder}"
                                   Fill="{StaticResource AquamarineSkinBuildRoutesDayBackground}"/>

                        <!-- This element is highlights routed days -->
                        <Rectangle Focusable="False" Margin="1" 
                                   x:Name="UnassignedOrdersDayBackground" 
                                   IsHitTestVisible="False" 
                                   SnapsToDevicePixels="True"
                                   Visibility="Hidden" 
                                   Stroke="{StaticResource AquamarineSkinUnassignedOrdersDayBorder}"
                                   Fill="{StaticResource AquamarineSkinUnassignedOrdersDayBackground}"/>

                        <Rectangle Focusable="False" 
                                   x:Name="SelectedBackground" 
                                   StrokeThickness="1"
                                   Margin="1"
                                   Opacity="0" 
                                   SnapsToDevicePixels="True"
                                   Stroke="{StaticResource AquamarineSkinTodayBorder}"
                                   Fill="{StaticResource AquamarineSkinTodayBackground}"/>
                        <Rectangle Focusable="False" 
                                   Margin="1"
                                   x:Name="BackgroundGrid" 
                                   Opacity="0" 
                                   SnapsToDevicePixels="True"
                                   Fill="{StaticResource AquamarineSkinMouseOverDayBackground}"
                                   Stroke="{StaticResource AquamarineSkinMouseOverDayBorder}"/>

                        <!-- This element is highlights routing days -->
                        <Ellipse Focusable="False" 
                                 Margin="1,0,0,0" 
                                 VerticalAlignment="Stretch"
                                 HorizontalAlignment="Stretch"
                                 x:Name="RoutingDayBackground" 
                                 StrokeDashCap="Round" StrokeDashArray="1 2" 
                                 StrokeDashOffset="0" 
                                 SnapsToDevicePixels="True"
								 Stroke="{StaticResource SelectionColorBrush}" 
                                 StrokeThickness="2" Visibility="Hidden">
                            <Ellipse.Resources>
                                <Storyboard x:Key="Storyboard1" RepeatBehavior="Forever">
                                    <DoubleAnimation BeginTime="0:0:0" Storyboard.TargetProperty="StrokeDashOffset" To="-1000" Duration="0:3:0" />
                                </Storyboard>
                            </Ellipse.Resources>
                            <Ellipse.Style>
                                <Style>
                                    <Style.Triggers>
                                        <Trigger Property="Ellipse.IsVisible" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource Storyboard1}" Name="ellipseIsVisible"/>
                                            </Trigger.EnterActions>
                                        </Trigger>
                                        <Trigger Property="Ellipse.IsVisible" Value="False">
                                            <Trigger.EnterActions>
                                                <StopStoryboard BeginStoryboardName="ellipseIsVisible"/>
                                            </Trigger.EnterActions>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>


                        <ContentPresenter
                                    Focusable="False"
                                    SnapsToDevicePixels="True"
                                    x:Name="NormalText"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Margin="4,1,4,1"
                                    Opacity="1"
                                    >
                            <TextElement.Foreground>
                                <SolidColorBrush x:Name="selectedText" Color="Black"/>
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <ContentPresenter
                                    SnapsToDevicePixels="True"
                                    Focusable="False"
                                    x:Name="NormalText2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    Margin="4,1,4,1"
                                    Content="{Binding Path=Content, ElementName=NormalText, Mode=OneWay}"
                                    Opacity="0"
                                    >
                            <TextElement.Foreground>
                                <SolidColorBrush x:Name="bigSelectedText" Color="Black"/>
                            </TextElement.Foreground>
                            <TextElement.FontWeight>
                                <FontWeight>
                                    Bold
                                </FontWeight>
                            </TextElement.FontWeight>
                            <TextElement.FontSize>
                                12
                            </TextElement.FontSize>
                        </ContentPresenter>
                        <Rectangle 
                             Focusable="False" 
                             x:Name="DayButtonFocusVisual" 
                             Visibility="Collapsed" 
                             IsHitTestVisible="false" 
                             SnapsToDevicePixels="True"
                             Stroke="#FF45D6FA"/>
                        <Rectangle Focusable="False" 
                                   x:Name="DragEnterBackground" 
                                   Stroke="{StaticResource AquamarineSkinDayDragEnterBorder}" 
                                   StrokeThickness="2" 
                                   Opacity="0" 
                                   SnapsToDevicePixels="True"
                                   Fill="{x:Null}"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="BackgroundGrid" Value="1"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="DragDrop.Drop">
                            <BeginStoryboard Storyboard="{StaticResource DragLeave}" x:Name="DragLeave_BeginStoryboard1"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="DragDrop.DragLeave">
                            <BeginStoryboard x:Name="DragLeave_BeginStoryboard" Storyboard="{StaticResource DragLeave}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="DragDrop.DragEnter">
                            <BeginStoryboard Storyboard="{StaticResource DragEnter}"/>
                        </EventTrigger>

                        <!-- This DataTrigger is used for highlight routed days -->
                        <DataTrigger Binding="{Binding Converter={StaticResource routedCalendarDayConverter}}"
                                             Value="RoutesBuilt">
                            <Setter TargetName="RoutingDayBackground" 
                                            Property="Visibility" Value="Hidden" />
                            <Setter TargetName="UnassignedOrdersDayBackground" 
                                            Property="Visibility" Value="Hidden" />
                            <Setter TargetName="RoutedDayBackground" 
                                            Property="Visibility" Value="Visible" />
                            <Setter TargetName="baseGrid" 
                                            Property="AllowDrop" Value="True"/>
                        </DataTrigger>

                        <!-- This DataTrigger is used for highlight BuildingRoutes days -->
                        <DataTrigger Binding="{Binding Converter={StaticResource routedCalendarDayConverter}}"
                                             Value="BuildingRoutes">
                            <Setter TargetName="RoutedDayBackground" 
                                            Property="Visibility" Value="Hidden" />
                            <Setter TargetName="UnassignedOrdersDayBackground" 
                                            Property="Visibility" Value="Hidden" />
                            <Setter TargetName="RoutingDayBackground" 
                                            Property="Visibility" Value="Visible" />
                            <Setter TargetName="baseGrid" 
                                            Property="AllowDrop" Value="False"/>
                        </DataTrigger>

                        <!-- This DataTrigger is used for highlight HasUnassignedOrders days -->
                        <DataTrigger Binding="{Binding Converter={StaticResource routedCalendarDayConverter}}"
                                             Value="HasUnassignedOrders">
                            <Setter TargetName="RoutedDayBackground" 
                                            Property="Visibility" Value="Hidden" />
                            <Setter TargetName="UnassignedOrdersDayBackground" 
                                            Property="Visibility" Value="Visible" />
                            <Setter TargetName="RoutingDayBackground" 
                                            Property="Visibility" Value="Hidden" />
                            <Setter TargetName="baseGrid" 
                                            Property="AllowDrop" Value="True"/>
                        </DataTrigger>

                        <!-- This DataTrigger is used for highlight Empty days -->
                        <DataTrigger Binding="{Binding Converter={StaticResource routedCalendarDayConverter}}"
                                             Value="Empty">
                            <Setter TargetName="RoutedDayBackground" 
                                            Property="Visibility" Value="Hidden" />
                            <Setter TargetName="UnassignedOrdersDayBackground" 
                                            Property="Visibility" Value="Hidden" />
                            <Setter TargetName="RoutingDayBackground" 
                                            Property="Visibility" Value="Hidden" />
                            <Setter TargetName="baseGrid" 
                                            Property="AllowDrop" Value="True"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Calendar day button style with days with barriers support -->
    <Style TargetType="CalendarDayButton" x:Key="calendarDayButtonStyleDaysWithBarriersSupport">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">

                    <ControlTemplate.Resources>
                        <converters:BarriersCalendarDayConverter x:Key="barriersCalendarDayConverter"/>

                        <Storyboard x:Key="DragEnter">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DragEnterBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="DragLeave">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DragEnterBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid Focusable="False" x:Name="baseGrid" AllowDrop="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="bigSelectedText" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Opacity" To="0.3" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="bigSelectedText" Storyboard.TargetProperty="Opacity" To="0.3" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color" To="White"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="bigSelectedText" Storyboard.TargetProperty="Color" To="White"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="RegularDay"/>
                                <VisualState x:Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="NormalText2" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color" To="#FFFFFFFF"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                        <Rectangle Focusable="False" 
                                   x:Name="TodayBackground" 
                                   Opacity="0" 
                                   SnapsToDevicePixels="True"
                                   Fill="Transparent"/>

                        <!-- This element is highlights routed days -->
                        <Rectangle Focusable="False" Margin="1" 
                                   x:Name="DayWithBarrierBackground" 
                                   IsHitTestVisible="False" 
                                   SnapsToDevicePixels="True"
                                   Visibility="Hidden" 
                                   Stroke="{StaticResource BarriersDayBorder}"
                                   Fill="{StaticResource BarriersDayBackground}"/>

                        <!-- This element is highlights routed days -->

                        <Rectangle Focusable="False" 
                                   x:Name="SelectedBackground" 
                                   StrokeThickness="1"
                                   Margin="1"
                                   Opacity="0" 
                                   SnapsToDevicePixels="True"
                                   Stroke="{StaticResource AquamarineSkinTodayBorder}"
                                   Fill="{StaticResource AquamarineSkinTodayBackground}"/>
                        <Rectangle Focusable="False" 
                                   Margin="1"
                                   x:Name="BackgroundGrid" 
                                   Opacity="0" 
                                   SnapsToDevicePixels="True"
                                   Fill="{StaticResource AquamarineSkinMouseOverDayBackground}"
                                   Stroke="{StaticResource AquamarineSkinMouseOverDayBorder}"/>

                        <ContentPresenter
                                    Focusable="False"
                                    SnapsToDevicePixels="True"
                                    x:Name="NormalText"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Margin="4,1,4,1"
                                    Opacity="1"
                                    >
                            <TextElement.Foreground>
                                <SolidColorBrush x:Name="selectedText" Color="Black"/>
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <ContentPresenter
                                    SnapsToDevicePixels="True"
                                    Focusable="False"
                                    x:Name="NormalText2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    Margin="4,1,4,1"
                                    Content="{Binding Path=Content, ElementName=NormalText, Mode=OneWay}"
                                    Opacity="0"
                                    >
                            <TextElement.Foreground>
                                <SolidColorBrush x:Name="bigSelectedText" Color="Black"/>
                            </TextElement.Foreground>
                            <TextElement.FontWeight>
                                <FontWeight>
                                    Bold
                                </FontWeight>
                            </TextElement.FontWeight>
                            <TextElement.FontSize>
                                12
                            </TextElement.FontSize>
                        </ContentPresenter>
                        <Rectangle 
                             Focusable="False" 
                             x:Name="DayButtonFocusVisual" 
                             Visibility="Collapsed" 
                             IsHitTestVisible="false" 
                             SnapsToDevicePixels="True"
                             Stroke="#FF45D6FA"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="BackgroundGrid" Value="1"/>
                        </Trigger>

                        <!-- This DataTrigger is used for highlight days with barriers -->
                        <DataTrigger Binding="{Binding Converter={StaticResource barriersCalendarDayConverter}}"
                                             Value="True">
                            <Setter TargetName="DayWithBarrierBackground" 
                                            Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Converter={StaticResource barriersCalendarDayConverter}}"
                                             Value="False">
                            <Setter TargetName="DayWithBarrierBackground" 
                                            Property="Visibility" Value="Hidden" />
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Common calendar style -->
    <Style TargetType="Calendar" x:Key="calendarStyle">
        <Setter Property="CalendarDayButtonStyle" Value="{StaticResource defaultCalendarDayButtonStyle}"/>
        <Setter Property="CalendarItemStyle" Value="{StaticResource MainCalendarItemStyle}"/>
    </Style>

    <!-- Default date picker style -->
    <Style TargetType="DatePicker">
        <Setter Property="CalendarStyle" Value="{StaticResource calendarStyle}"/>
    </Style>


    <!-- Date picker style -->
    <Style x:Key="DefaultDatePickerStyle" TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="#00FFFFFF"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnGotFocus1"/>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              x:Name="PART_Root" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.Resources>
                                <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                    <Grid>
                                        <Grid FlowDirection="LeftToRight" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Width="17" Height="16" Background="#11FFFFFF">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="23*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                            </Grid.ColumnDefinitions>
                                            <Border Margin="-1,-1,-1,-1" x:Name="Highlight" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderBrush="#FF45D6FA" BorderThickness="1,1,1,1" CornerRadius="0,0,1,1"/>
                                            <Border Margin="0,-1,0,0" x:Name="Background" Opacity="1" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Background="#FF1F3B53" BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5"/>
                                            <Border Margin="0,-1,0,0" x:Name="BackgroundGradient" Opacity="1" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderBrush="#BF000000" BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint="0.7,1" StartPoint="0.7,0">
                                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                        <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                        <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                        <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Rectangle StrokeThickness="1" Grid.ColumnSpan="4" Grid.RowSpan="1">
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                        <GradientStop Color="#FF494949"/>
                                                        <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                        <GradientStop Color="#FF4084BD"/>
                                                        <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                            <Path Fill="#FF2F2F2F" Stretch="Fill" HorizontalAlignment="Center" Margin="5,3,5,3" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Data="M11.426758,8.4305077L11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077z M14.65086,8.4305077L18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504L14.881817,14.929531C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055L14.65086,12.238613z"/>
                                            <Ellipse Fill="#FFFFFFFF" StrokeThickness="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="2" Height="2" Grid.ColumnSpan="4"/>
                                            <Border x:Name="DisabledVisual" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderBrush="#B2FFFFFF" BorderThickness="1,1,1,1" CornerRadius="0,0,0.5,0.5"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                                <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="25"/>
                            </Grid.ColumnDefinitions>
                            <Button HorizontalAlignment="Left" Margin="3,0,3,0" x:Name="PART_Button" 
                                    VerticalAlignment="Center" Width="20" 
                                    Foreground="{TemplateBinding Foreground}" 
                                    Focusable="False" 
                                    Template="{StaticResource DropDownButtonTemplate}"
                                    Grid.Column="1" Grid.Row="0"/>
                            <DatePickerTextBox HorizontalAlignment="Stretch" 
                                                       x:Name="PART_TextBox" 
                                                       VerticalAlignment="Stretch" 
                                                       FontSize="13" 
                                                       Foreground="{TemplateBinding Foreground}" 
                                                       HorizontalContentAlignment="Stretch" 
                                                       Padding="0" 
                                                       BorderBrush="Transparent"
                                                       Margin="0,0,0,0"
                                                       VerticalContentAlignment="Stretch" 
                                                       Grid.Column="0" 
                                                       Grid.Row="0" Text=" "/>
                            <Grid x:Name="PART_DisabledVisual" IsHitTestVisible="False" Opacity="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Fill="#A5FFFFFF" RadiusX="1" RadiusY="1" Grid.Column="0" Grid.Row="0"/>
                                <Rectangle Fill="#A5FFFFFF" RadiusX="1" RadiusY="1" Margin="3,0,3,0" Width="19" Height="18" Grid.Column="1" Grid.Row="0"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" StaysOpen="False"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FocusManager.GotFocus" SourceName="PART_TextBox">
                            <BeginStoryboard Storyboard="{StaticResource OnGotFocus1}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ///////////////////////////////////////////////////////////////////////////////////////////////////// -->

</ResourceDictionary>